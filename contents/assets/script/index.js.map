{"version":3,"sources":["webpack://mdneUI/./src.renderer/assets/script/libs/filefilters.js","webpack://mdneUI/webpack/bootstrap","webpack://mdneUI/webpack/runtime/define property getters","webpack://mdneUI/webpack/runtime/hasOwnProperty shorthand","webpack://mdneUI/webpack/runtime/make namespace object","webpack://mdneUI/./src.renderer/assets/script/libs/backends/carlo.js","webpack://mdneUI/./src.renderer/assets/script/libs/backends/electron.js","webpack://mdneUI/./src.renderer/assets/script/libs/backends/browser.js","webpack://mdneUI/./src.renderer/assets/script/libs/backend-api.js","webpack://mdneUI/./src.renderer/assets/script/libs/cmdrunner.js","webpack://mdneUI/./src.renderer/assets/script/libs/remote.js","webpack://mdneUI/./src.renderer/assets/script/libs/appstate.js","webpack://mdneUI/./src.renderer/assets/script/libs/backend-wrap.js","webpack://mdneUI/./src.renderer/assets/script/libs/modes.js","webpack://mdneUI/./src.renderer/assets/script/components/aceeditor.js","webpack://mdneUI/./src.renderer/assets/script/components/filedropdialog.js","webpack://mdneUI/./src.renderer/assets/script/components/fileopendialog.js","webpack://mdneUI/./src.renderer/assets/script/components/filesavedialog.js","webpack://mdneUI/./src.renderer/assets/script/components/settingsdialog.js","webpack://mdneUI/./src.renderer/assets/script/components/ui.js","webpack://mdneUI/./src.renderer/assets/script/libs/start.js","webpack://mdneUI/./src.renderer/assets/script/libs/escape.js","webpack://mdneUI/./src.renderer/assets/script/libs/commands/app.js","webpack://mdneUI/./src.renderer/assets/script/libs/commands/mode.js","webpack://mdneUI/./src.renderer/assets/script/libs/commands/md.js","webpack://mdneUI/./src.renderer/assets/script/components/app.js","webpack://mdneUI/./src.renderer/assets/script/libs/lsx.js","webpack://mdneUI/./src.renderer/assets/script/index.js"],"names":["openFilter","value","text","exts","mime","saveAsFilter","exportFilter","concat","window","_MDNE_BACKEND_CAPS_NO_PDF_RENDERER","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","renderByMenneu_","loadFile_","saveFile_","listDirectory_","listDesktopDirectory_","listHomeDirectory_","fileExists_","pathJoin_","getDirName_","getBaseName_","getStartupFile_","openURL_","openNewWindow_","rpc_","carlo_","_MDNE_BACKEND_TYPE","_MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN","renderByMenneu","loadFile","saveFile","listDirectory","listDesktopDirectory","listHomeDirectory","fileExists","pathJoin","getDirName","getBaseName","getStartupFile","openURL","openNewWindow","rpc","carlo","resourceBaseDirectory","nativeNotifyEditorDirty","nativeNotifyEditorDirty_","nativeAlert","nativeAlert_","nativeAlertSync","nativeAlertSync_","nativeConfirm","nativeConfirm_","nativeConfirmSync","nativeConfirmSync_","nativeFileOpenDialog","nativeFileOpenDialog_","nativeFileSaveDialog","nativeFileSaveDialog_","saveFileAs","apiKey","mdneApi","getKey","dirty","send","async","message","type","ipc","ipcSync","title","defaultPath","filters","intent","source","data","options","srcPath","exportPath","filePath","dirPath","url","Backend","frontend","this","frontend_","command","ast","backend_","handle","x","loadParams","fileInfo","path","file","fileBodyText","on","event","arg","ret","runCommand","Promise","sender","succeeded","payload","e","error","document","addEventListener","ev","keyCode","preventDefault","resourceBaseDirectory_","convertFileFilters","filter","extensions","length","map","description","name","accept","ext","_MDNE_BACKEND_RESOURCE_BASE_DIR","showWelcomeFile","_MDNE_BACKEND_SHOW_WELCOME_FILE","replacementMacros","_mdneReplacementMacros","Array","isArray","slice","re","fn","welcomeFile","nativeSaveFileHandle","nativeExportFileHandle","internalSaveFileEx","forExport","p","b","util","menneu","getAppEnv","RedAgateUtil","modFilters","saved","showSaveFilePicker","fileName","t","writable","createWritable","write","close","FileSaver","saveTextAs","location","hash","encodeURIComponent","Base64","encode","pako","deflate","TextEncoding","encodeToUtf8","replace","showOpenFilePicker","fileHandle","types","getFile","opts","assign","outputFormat","toLowerCase","errText","Error","bufStr","render","toString","resultUrl","URL","createObjectURL","Blob","setTimeout","revokeObjectURL","response","fetch","directory","files","isDirectory","join","a","split","stack","pop","match","push","startsWith","dir","lastIndexOf","substring","targetPath","targetUrl","result","forEach","part","item","decodeURIComponent","indexOf","inflate","decode","ok","open","pathname","LM_async_","config","liyad","defaultConfig","reservedNames","Template","installCore","installArithmetic","installSequence","installConcurrent","stripComments","returnMultipleRoot","SExpressionAsync","setGlobals","install","operators","state","resolve","reject","funcs","evaluateAST","reader","FileReader","onload","onerror","readAsText","backend","carloBackend","electronBackend","_mdneExternalBackend","browserBackend","commandRunner","AppState","AppName","AceEditor","inputFormat","fileChanged","skipDropDialog","invalidate","updateAppIndicatorBar","getElementById","innerText","notifyEditorDirty","alertWrap","String","alert","confirmWrap","confirm","getInputFormat","endsWith","isPreviewable","getAceEditorMode","React","Component","constructor","props","super","editor","outerWrapRef","createRef","componentDidMount","ace","edit","id","setFontSize","fontSize","setTheme","session","setMode","commands","addCommand","bindKey","win","mac","exec","getValue","getUndoManager","markClean","onSaveAs","onChange","y","onChangeScrollTop","getScreenLength","renderer","lineHeight","onChangeScrollLeft","lsx","stretched","collapsed","FileDropDialog","dialogRef","showModal","handler","handleOnOpenDialogClick","current","activeElement","blur","openFile","aceId","clearSelection","setValue","moveCursorTo","openFileAndClose","handleOnDragOver","stopPropagation","i","dataTransfer","paths","all","texts","handleCancelClick","fileOpenDialog","currentAceId","currentFilePath","fileTypes","currentDir","handleOnDrop","FileOpenDialog","selectedFileType","currentDirFiles","inputFileName","fileNameInputRef","fileTypeSelectorRef","setState","selectedType","filePaths","then","info","catch","e2","e3","handleFileListItemClick","isDir","focus","trim","getFilteredCurrentDirFiles","z","handleOkClick","FileSaveDialog","allFilesType","SettingsDialog","showFields","fontFamily","useSoftTabs","tabSize","wrap","showInvisibles","darkThemePreview","theme","enableSnippets","app","componentDidUpdate","M","updateTextFields","elems","querySelectorAll","FormSelect","init","handleFontFamilyChange","target","handleFontSizeChange","handleTabSizeChange","Math","floor","Number","handleSoftTabsChange","checked","handleWrapChange","handleShowInvisiblesChange","handleEnableSnippetsChange","handleDarkThemePreviewChange","handleSkipDropDialogChange","handleThemeChange","enableBasicAutocompletion","enableLiveAutocompletion","cf","dataFormat","escapeHtml","s","getOperators","args","dirName","fullPath","fileDropDialogRef","afterFileOpen","handleFileOpenClick","handleSaveClick","fileSaveAs","handleSaveAsClick","fileExport","handleExportClick","handleShowClick","onoff","syncPreview","format","isPdf","useScripting","getEntireText","getSelectedText","insertText","runCommandAST","topic","getCurrentAceId","modeName","aceMode","rows","max","cols","fill","_","insert","getCursorPosition","LOCAL_STORAGE_KEY","LOCAL_STORAGE_INITIAL","JSON","stringify","version","App","splitterMoving","counter","aceFontSize","scheduleRerenderPreview","savedEditorStyleWidth","savedPreviewScrollY","commandBoxRef","editorRef","editorPlaceholderRef","splitterRef","rootRef","fileOpenDialogRef","fileSaveDialogRef","settingsDialogRef","onbeforeunload","isClean","getAppOperators","getModeOperators","getMdOperators","appSettings","getAppSettings","ua","navigator","userAgent","isChrome","Dropdown","constrainWidth","Tooltip","Autocomplete","dialogPolyfill","dialogs","dialog","registerDialog","loadModule","setOptions","parse","onkeyup","ctrlKey","shiftKey","setEditorNewFile","openFileOpenDialog","localStorage","getItem","saveAppSettings","settings","setItem","contentWindow","style","width","resize","handleStretchedClick","scrollTo","scrollX","scrollY","handleSyncPreviewClick","handleIsPdfClick","handleUseScriptingClick","start","rawInput","outputUrl","console","darkTheme","min","documentElement","scrollHeight","execCommand","handleSettingsClick","getOptions","handleAceEditorOnChange","curOp","reload","handleAceEditorOnChangeScrollTop","totalHeight","w","handleAceEditorOnChangeScrollLeft","handleCommandBoxOnKeyDown","clearBox","getInstance","toast","html","classes","handleCommandBoxOnBlur","Toast","dismissAll","handleSplitterOnPointerDown","onpointermove","ev2","maxWidth","clientX","innerWidth","round","onpointerup","releasePointerCapture","pointerId","setPointerCapture","isEmulation","iframeSrc","LSX","jsx","createElement","jsxFlagment","Fragment","components","MenuItem","icon","caption","onClick","MenuDivider","Switch","offText","onText","elClass","lsx_","setFrontend","initBackend","ReactDOM"],"mappings":"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","file":"index.js","sourcesContent":["// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport const openFilter = [{\r\n    value: 'md',\r\n    text: 'Markdown (*.md, *.markdown)',\r\n    exts: ['.md', '.markdown'],\r\n    mime: 'text/markdown',\r\n}, {\r\n    value: 'html',\r\n    text: 'HTML (*.html, *.htm)',\r\n    exts: ['.html', '.htm'],\r\n    mime: 'text/html',\r\n}, {\r\n    value: '*',\r\n    text: 'All Files (*.*)',\r\n    exts: [],\r\n    mime: '*/*',\r\n}];\r\n\r\n\r\nexport const saveAsFilter = [{\r\n    value: 'md',\r\n    text: 'Markdown (*.md, *.markdown)',\r\n    exts: ['.md', '.markdown'],\r\n    mime: 'text/markdown',\r\n}, {\r\n    value: '*',\r\n    text: 'All Files (*.*)',\r\n    exts: [],\r\n    mime: '*/*',\r\n}];\r\n\r\n\r\nexport const exportFilter = [].concat(\r\n    (window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER ? [] : [{\r\n        value: 'pdf',\r\n        text: 'PDF (*.pdf)',\r\n        exts: ['.pdf'],\r\n        mime: 'application/pdf',\r\n    }]),\r\n    [{\r\n        value: 'html',\r\n        text: 'HTML (*.html, *.htm)',\r\n        exts: ['.html', '.htm'],\r\n        mime: 'text/html',\r\n    }, {\r\n        value: '*',\r\n        text: 'All Files (*.*)',\r\n        exts: [],\r\n        mime: '*/*',\r\n    }]\r\n);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nlet nativeNotifyEditorDirty_ = void 0;\r\nlet nativeAlert_ = void 0;\r\nlet nativeAlertSync_ = void 0;\r\nlet nativeConfirm_ = void 0;\r\nlet nativeConfirmSync_ = void 0;\r\nlet nativeFileOpenDialog_ = void 0;\r\nlet nativeFileSaveDialog_ = void 0;\r\nlet renderByMenneu_ = void 0;\r\nlet loadFile_ = void 0;\r\nlet saveFile_ = void 0;\r\nlet listDirectory_ = void 0;\r\nlet listDesktopDirectory_ = void 0;\r\nlet listHomeDirectory_ = void 0;\r\nlet fileExists_ = void 0;\r\nlet pathJoin_ = void 0;\r\nlet getDirName_ = void 0;\r\nlet getBaseName_ = void 0;\r\nlet getStartupFile_ = void 0;\r\nlet openURL_ = void 0;\r\nlet openNewWindow_ = void 0;\r\nlet rpc_ = void 0;\r\nlet carlo_ = void 0;\r\n\r\n\r\nif (window._MDNE_BACKEND_TYPE === 'CARLO_RPC') {\r\n    // Carlo backend\r\n\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER = false;\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN = false;\r\n\r\n    renderByMenneu_ = window.renderByMenneu;\r\n    loadFile_ = window.loadFile;\r\n    saveFile_ = window.saveFile;\r\n    listDirectory_ = window.listDirectory;\r\n    listDesktopDirectory_ = window.listDesktopDirectory;\r\n    listHomeDirectory_ = window.listHomeDirectory;\r\n    fileExists_ = window.fileExists;\r\n    pathJoin_ = window.pathJoin;\r\n    getDirName_ = window.getDirName;\r\n    getBaseName_ = window.getBaseName;\r\n    getStartupFile_ = window.getStartupFile;\r\n    openURL_ = window.openURL;\r\n    openNewWindow_ = window.openNewWindow;\r\n    rpc_ = window.rpc;\r\n    carlo_ = window.carlo;\r\n}\r\n\r\n\r\nexport const resourceBaseDirectory = void 0;\r\nexport const nativeNotifyEditorDirty = nativeNotifyEditorDirty_;\r\nexport const nativeAlert = nativeAlert_;\r\nexport const nativeAlertSync = nativeAlertSync_;\r\nexport const nativeConfirm = nativeConfirm_;\r\nexport const nativeConfirmSync = nativeConfirmSync_;\r\nexport const nativeFileOpenDialog = nativeFileOpenDialog_;\r\nexport const nativeFileSaveDialog = nativeFileSaveDialog_;\r\nexport const renderByMenneu = renderByMenneu_;\r\nexport const loadFile = loadFile_;\r\nexport const saveFile = saveFile_;\r\nexport const saveFileAs = saveFile_;  // Calro backend have no `saveFileAs` API\r\nexport const listDirectory = listDirectory_;\r\nexport const listDesktopDirectory = listDesktopDirectory_;\r\nexport const listHomeDirectory = listHomeDirectory_;\r\nexport const fileExists = fileExists_;\r\nexport const pathJoin = pathJoin_;\r\nexport const getDirName = getDirName_;\r\nexport const getBaseName = getBaseName_;\r\nexport const getStartupFile = getStartupFile_;\r\nexport const openURL = openURL_;\r\nexport const openNewWindow = openNewWindow_;\r\nexport const rpc = rpc_;\r\nexport const carlo = carlo_;\r\n","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nlet nativeNotifyEditorDirty_ = void 0;\r\nlet nativeAlert_ = void 0;\r\nlet nativeAlertSync_ = void 0;\r\nlet nativeConfirm_ = void 0;\r\nlet nativeConfirmSync_ = void 0;\r\nlet nativeFileOpenDialog_ = void 0;\r\nlet nativeFileSaveDialog_ = void 0;\r\nlet renderByMenneu_ = void 0;\r\nlet loadFile_ = void 0;\r\nlet saveFile_ = void 0;\r\nlet listDirectory_ = void 0;\r\nlet listDesktopDirectory_ = void 0;\r\nlet listHomeDirectory_ = void 0;\r\nlet fileExists_ = void 0;\r\nlet pathJoin_ = void 0;\r\nlet getDirName_ = void 0;\r\nlet getBaseName_ = void 0;\r\nlet getStartupFile_ = void 0;\r\nlet openURL_ = void 0;\r\nlet openNewWindow_ = void 0;\r\nlet rpc_ = void 0;\r\nlet carlo_ = void 0;\r\n\r\n\r\nif (window._MDNE_BACKEND_TYPE === 'ELECTRON_IPC') {\r\n    // Electron backend\r\n\r\n    const apiKey = mdneApi.getKey();\r\n\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER = false;\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN = false;\r\n\r\n    nativeNotifyEditorDirty_ = (dirty) => {\r\n        mdneApi.send(apiKey, 'app:editor:notifyEditorDirty', {\r\n            dirty,\r\n        });\r\n    };\r\n\r\n    nativeAlert_ = (async (message, type) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:nativeAlert', {\r\n            message,\r\n            type,\r\n        });\r\n    });\r\n\r\n    nativeAlertSync_ = ((message, type) => {\r\n        return mdneApi.ipcSync(apiKey, 'app:editor:nativeAlertSync', {\r\n            message,\r\n            type,\r\n        });\r\n    });\r\n\r\n    nativeConfirm_ = (async (message, type) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:nativeConfirm', {\r\n            message,\r\n            type,\r\n        });\r\n    });\r\n\r\n    nativeConfirmSync_ = ((message, type) => {\r\n        return mdneApi.ipcSync(apiKey, 'app:editor:nativeConfirmSync', {\r\n            message,\r\n            type,\r\n        });\r\n    });\r\n\r\n    nativeFileOpenDialog_ = (async (title, defaultPath, filters) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:nativeFileOpenDialog', {\r\n            title,\r\n            defaultPath,\r\n            filters,\r\n        });\r\n    });\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    nativeFileSaveDialog_ = (async (title, defaultPath, filters, intent) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:nativeFileSaveDialog', {\r\n            title,\r\n            defaultPath,\r\n            filters,\r\n        });\r\n    });\r\n\r\n    renderByMenneu_ = (async (source, data, options, srcPath, ...exportPath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:renderByMenneu', {\r\n            source,\r\n            data,\r\n            options,\r\n            srcPath,\r\n            exportPath,\r\n        });\r\n    });\r\n\r\n    loadFile_ = (async (...filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:loadFile', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    saveFile_ = (async (text, ...filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:saveFile', {\r\n            text,\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    listDirectory_ = (async (...dirPath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:listDirectory', {\r\n            dirPath,\r\n        });\r\n    });\r\n\r\n    listDesktopDirectory_ = (async () => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:listDesktopDirectory', {});\r\n    });\r\n\r\n    listHomeDirectory_ = (async () => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:listHomeDirectory', {});\r\n    });\r\n\r\n    fileExists_ = (async (...filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:fileExists', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    pathJoin_ = (async (...filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:pathJoin', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    getDirName_ = (async (filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:getDirName', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    getBaseName_ = (async (filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:getBaseName', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    getStartupFile_ = (async () => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:getStartupFile', {});\r\n    });\r\n\r\n    openURL_ = (async (url) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:openURL', {\r\n            url,\r\n        });\r\n    });\r\n\r\n    openNewWindow_ = (async () => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:openNewWindow', {});\r\n    });\r\n\r\n    class Backend {\r\n        async setFrontend(frontend) {\r\n            this.frontend_ = frontend;\r\n            (async () => {\r\n                //\r\n            })();\r\n        }\r\n\r\n        async runCommand(command) {\r\n            return await mdneApi.ipc(apiKey, 'app:editor:Backend:runCommand', {\r\n                command,\r\n            });\r\n        }\r\n\r\n        async runCommandAST(ast) {\r\n            return await mdneApi.ipc(apiKey, 'app:editor:Backend:runCommandAST', {\r\n                ast,\r\n            });\r\n        }\r\n    }\r\n\r\n    const backend_ = new Backend;\r\n\r\n    rpc_ = {\r\n        handle: x => x,\r\n    };\r\n\r\n    carlo_ = {\r\n        loadParams: (async () => {\r\n            return [backend_];\r\n        }),\r\n        fileInfo: (async (file) => {\r\n            return ({\r\n                path: file.path,\r\n                fileBodyText: await loadFile(file.path),\r\n            });\r\n        }),\r\n    };\r\n\r\n    mdneApi.on(apiKey, 'app:editor:Frontend:runCommand', async (event, arg) => {\r\n        try {\r\n            let ret = backend_.frontend_.runCommand(arg.command);\r\n            if (ret instanceof Promise) {\r\n                ret = await ret;\r\n            }\r\n            event.sender.send('app:editor:Frontend:runCommand', {succeeded: true, payload: ret});\r\n        } catch (e) {\r\n            event.sender.send('app:editor:Frontend:runCommand', {succeeded: false, error: e.message});\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keyup', (ev) => {\r\n        if (ev.keyCode === 122) {\r\n            // F11\r\n            mdneApi.ipc(apiKey, 'app:editor:toggleFullScreen', {});\r\n            ev.preventDefault();\r\n        }\r\n    }, false);\r\n}\r\n\r\n\r\nexport const resourceBaseDirectory = void 0;\r\nexport const nativeNotifyEditorDirty = nativeNotifyEditorDirty_;\r\nexport const nativeAlert = nativeAlert_;\r\nexport const nativeAlertSync = nativeAlertSync_;\r\nexport const nativeConfirm = nativeConfirm_;\r\nexport const nativeConfirmSync = nativeConfirmSync_;\r\nexport const nativeFileOpenDialog = nativeFileOpenDialog_;\r\nexport const nativeFileSaveDialog = nativeFileSaveDialog_;\r\nexport const renderByMenneu = renderByMenneu_;\r\nexport const loadFile = loadFile_;\r\nexport const saveFile = saveFile_;\r\nexport const saveFileAs = saveFile_;  // Electron backend have no `saveFileAs` API\r\nexport const listDirectory = listDirectory_;\r\nexport const listDesktopDirectory = listDesktopDirectory_;\r\nexport const listHomeDirectory = listHomeDirectory_;\r\nexport const fileExists = fileExists_;\r\nexport const pathJoin = pathJoin_;\r\nexport const getDirName = getDirName_;\r\nexport const getBaseName = getBaseName_;\r\nexport const getStartupFile = getStartupFile_;\r\nexport const openURL = openURL_;\r\nexport const openNewWindow = openNewWindow_;\r\nexport const rpc = rpc_;\r\nexport const carlo = carlo_;\r\n","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nlet resourceBaseDirectory_ = void 0;\r\nlet nativeNotifyEditorDirty_ = void 0;\r\nlet nativeAlert_ = void 0;\r\nlet nativeAlertSync_ = void 0;\r\nlet nativeConfirm_ = void 0;\r\nlet nativeConfirmSync_ = void 0;\r\nlet nativeFileOpenDialog_ = void 0;\r\nlet nativeFileSaveDialog_ = void 0;\r\nlet renderByMenneu_ = void 0;\r\nlet loadFile_ = void 0;\r\nlet saveFile_ = void 0;\r\nlet listDirectory_ = void 0;\r\nlet listDesktopDirectory_ = void 0;\r\nlet listHomeDirectory_ = void 0;\r\nlet fileExists_ = void 0;\r\nlet pathJoin_ = void 0;\r\nlet getDirName_ = void 0;\r\nlet getBaseName_ = void 0;\r\nlet getStartupFile_ = void 0;\r\nlet openURL_ = void 0;\r\nlet openNewWindow_ = void 0;\r\nlet rpc_ = void 0;\r\nlet carlo_ = void 0;\r\n\r\n\r\nconst additionalContentStyles = `\r\n<style>\r\n::-webkit-scrollbar {\r\n    width: 13px;\r\n    height: 13px;\r\n}\r\n::-webkit-scrollbar-track {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-color: rgb(88, 88, 88);\r\n    background-color: rgb(56, 56, 56);\r\n}\r\n::-webkit-scrollbar-thumb {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-color: rgb(88, 88, 88);\r\n    background-color: rgb(102, 102, 102);\r\n}\r\n</style>\r\n`;\r\n\r\n\r\nfunction convertFileFilters(filters) {\r\n    return (filters\r\n            .filter(x => x.extensions.length && x.extensions[0] !== '*')\r\n            .map(x => ({\r\n        description: x.name,\r\n        accept: {\r\n            [x.mime]: x.extensions.map(ext => `.${ext}`),\r\n        },\r\n    })));\r\n}\r\n\r\n\r\nif (!window._MDNE_BACKEND_TYPE || window._MDNE_BACKEND_TYPE === 'BROWSER_EMULATION' || window._MDNE_BACKEND_TYPE === 'EXTERNAL_MIXED') {\r\n    // Fallback (for Browser)\r\n\r\n    window._MDNE_BACKEND_TYPE = window._MDNE_BACKEND_TYPE ?? 'BROWSER_EMULATION';\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER = true;\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN = true;\r\n\r\n    if (window._MDNE_BACKEND_RESOURCE_BASE_DIR) {\r\n        resourceBaseDirectory_ = window._MDNE_BACKEND_RESOURCE_BASE_DIR;\r\n    }\r\n\r\n    const showWelcomeFile = window._MDNE_BACKEND_SHOW_WELCOME_FILE ? true : false;\r\n    const replacementMacros = window._mdneReplacementMacros\r\n        ? Array.isArray(window._mdneReplacementMacros) ? window._mdneReplacementMacros.slice() : []\r\n        : [{\r\n            re: /!!!lsx\\s([\\s\\S]+?)!!!/g,\r\n            fn: 'lsx', // evaluate input as LSX script\r\n        }];\r\n    const welcomeFile = 'assets/data/welcome.md';\r\n\r\n    /** @type {FileSystemFileHandle | null} */\r\n    let nativeSaveFileHandle = null;\r\n    /** @type {FileSystemFileHandle | null} */\r\n    let nativeExportFileHandle = null;\r\n\r\n    if (window.showOpenFilePicker) {\r\n        nativeFileOpenDialog_ = (async (title, defaultPath, filters) => {\r\n            try {\r\n                const [fileHandle] = await window.showOpenFilePicker({\r\n                    types: convertFileFilters(filters),\r\n                });\r\n                nativeSaveFileHandle = fileHandle;\r\n                const file = await nativeSaveFileHandle.getFile();\r\n                return [file.name];\r\n            } catch (e) {\r\n                // Cancelled or failed\r\n                return void 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    if (window.showSaveFilePicker) {\r\n        /** @type {(title: string, defaultPath: string, filters: any, intent: 'saveas' | 'export') => string | undefined} */\r\n        nativeFileSaveDialog_ = (async (title, defaultPath, filters, intent) => {\r\n            try {\r\n                // NOTE: The existing file is cleared before this method returned if method is succeeded.\r\n                const handle = await window.showSaveFilePicker({\r\n                    types: convertFileFilters(filters),\r\n                });\r\n                const file = await handle.getFile();\r\n                switch (intent) {\r\n                case 'saveas':\r\n                    nativeSaveFileHandle = handle;\r\n                    break;\r\n                case 'export':\r\n                    nativeExportFileHandle = handle;\r\n                    break;\r\n                }\r\n                return file.name;\r\n            } catch (e) {\r\n                // Cancelled or failed\r\n                return void 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    renderByMenneu_ = (async (source, data, options, srcPath, ...exportPath) => {\r\n        const opts = Object.assign({}, options, {\r\n            replacementMacros: replacementMacros,\r\n        });\r\n        if (!opts.outputFormat || opts.outputFormat.toLowerCase() !== 'html') {\r\n            const errText = `output format ${opts.outputFormat} is not available.`;\r\n            throw new Error(errText);\r\n        }\r\n\r\n        const buf = await menneu.render(source, {}, opts);\r\n        let bufStr = buf.toString();\r\n        if (exportPath.length === 0) {\r\n            bufStr += additionalContentStyles;\r\n        }\r\n\r\n        // NOTE: Browsers treat Data URLs as cross-origin.\r\n        //       To avoid cross-origin, use Blob URLs instead.\r\n        // const resultUrl = 'data:text/html;base64,' + menneu.getAppEnv().RedAgateUtil.Base64.encode(buf);\r\n\r\n        const resultUrl = URL.createObjectURL(new Blob([bufStr], { type: 'text/html' }));\r\n\r\n        if (exportPath.length > 0) {\r\n            internalSaveFileEx(true, bufStr, ...exportPath);\r\n        }\r\n\r\n        // schedule revoking the Blob URL.\r\n        setTimeout(() => URL.revokeObjectURL(resultUrl), 5000);\r\n        return resultUrl;\r\n    });\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    loadFile_ = (async (...filePath) => {\r\n        if (nativeSaveFileHandle) {\r\n            const file = await nativeSaveFileHandle.getFile();\r\n            return await file.text();\r\n        } else {\r\n            const response = await fetch(welcomeFile);\r\n            return await response.text();\r\n        }\r\n    });\r\n\r\n    // eslint-disable-next-line no-inner-declarations\r\n    async function internalSaveFileEx(forExport, text, ...filePath) {\r\n        let p = await pathJoin(...filePath);\r\n        let b = await getBaseName(p);\r\n\r\n        const util = menneu.getAppEnv().RedAgateUtil;\r\n\r\n        const modFilters = await import('../filefilters');\r\n\r\n        let handle = forExport ? nativeExportFileHandle : nativeSaveFileHandle;\r\n        let saved = false;\r\n\r\n        if (window.showSaveFilePicker) {\r\n            if (! handle) {\r\n                const fileName = await nativeFileSaveDialog('', '', modFilters.saveAsFilter.map(x => ({\r\n                    name: x.text,\r\n                    extensions: x.exts && x.exts.length > 0 ? x.exts.map(t => t.slice(1)) : ['*'],\r\n                    mime: x.mime,\r\n                })), forExport ? 'export' : 'saveas');\r\n\r\n                handle = forExport ? nativeExportFileHandle : nativeSaveFileHandle;\r\n\r\n                if (handle && fileName) {\r\n                    p = b = fileName;\r\n                }\r\n            }\r\n            if (handle) {\r\n                const writable = await handle.createWritable();\r\n                await writable.write(text);\r\n                await writable.close();\r\n                saved = true;\r\n            }\r\n            if (forExport) {\r\n                nativeExportFileHandle = null;\r\n            }\r\n        }\r\n\r\n        if (! saved) {\r\n            // Fallback\r\n            await util.FileSaver.saveTextAs(b, text);\r\n        }\r\n\r\n        if (! forExport) {\r\n            try {\r\n                window.location.hash = `filename=${encodeURIComponent(b)}&open.d=${util.Base64.encode(pako.deflate(\r\n                    util.TextEncoding.encodeToUtf8(text)))\r\n                    .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')}`;\r\n            // eslint-disable-next-line no-empty\r\n            } catch (e) {}\r\n        }\r\n\r\n        return {\r\n            path: p,\r\n            name: b,\r\n        };\r\n    }\r\n\r\n    saveFile_ = (async (text, ...filePath) => {\r\n        return await internalSaveFileEx(false, text, ...filePath);\r\n    });\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    listDirectory_ = (async (...dirPath) => {\r\n        return {\r\n            directory: '',\r\n            files: [{\r\n                name: '.',\r\n                isDirectory: true,\r\n            }],\r\n        };\r\n    });\r\n\r\n    listDesktopDirectory_ = (async () => {\r\n        return {\r\n            directory: '/',\r\n            files: [{\r\n                name: '.',\r\n                isDirectory: true,\r\n            }],\r\n        };\r\n    });\r\n\r\n    listHomeDirectory_ = (async () => {\r\n        return {\r\n            directory: '/',\r\n            files: [{\r\n                name: '.',\r\n                isDirectory: true,\r\n            }],\r\n        };\r\n    });\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    fileExists_ = (async (...filePath) => {\r\n        return false;\r\n    });\r\n\r\n    pathJoin_ = (async (...filePath) => {\r\n        const p = filePath.filter(x => x.length > 0).join('/').replace(/\\/+/g, '/');\r\n        const a = p.split('/');\r\n        const stack = [];\r\n        for (const x of a) {\r\n            switch (x) {\r\n            case '.': case '':\r\n                break;\r\n            case '..':\r\n                stack.pop();\r\n                break;\r\n            default:\r\n                if (x.match(/^[.]+$/)) {\r\n                    stack.pop();\r\n                } else {\r\n                    stack.push(x);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return (p.startsWith('/') ? '/' : '') + stack.join('/');\r\n    });\r\n\r\n    getDirName_ = (async (filePath) => {\r\n        let dir = filePath;\r\n        if (dir.lastIndexOf('/') !== -1) {\r\n            dir = dir.substring(0, dir.lastIndexOf('/'));\r\n        } else {\r\n            dir = '';\r\n        }\r\n        return dir;\r\n    });\r\n\r\n    getBaseName_ = (async (filePath) => {\r\n        let base = filePath.substring(filePath.lastIndexOf('/') + 1);\r\n        return base;\r\n    });\r\n\r\n    getStartupFile_ = (async () => {\r\n        let targetPath = void 0;\r\n        let targetUrl = void 0;\r\n        const util = menneu.getAppEnv().RedAgateUtil;\r\n\r\n        if (window.location.hash) {\r\n            const result = {};\r\n            window.location.hash.substring(1).split('&').forEach((part) => {\r\n                const item = part.split('=');\r\n                result[item[0]] = decodeURIComponent(item[1]);\r\n            });\r\n            if (window.location.hash.indexOf('open.d=') >= 0) {\r\n                if (result['open.d']) {\r\n                    targetPath = result['filename'] || 'Untitled.md';\r\n                    try {\r\n                        targetUrl = `data:text/plain;base64,${util.Base64.encode(pako.inflate(\r\n                            util.Base64.decode(\r\n                                result['open.d'].replace(/-/g, '+').replace(/_/g, '/'))))}`;\r\n                    // eslint-disable-next-line no-empty\r\n                    } catch (e) {}\r\n                }\r\n            } else if (window.location.hash.indexOf('open.url=') >= 0) {\r\n                if (result['open.url']) {\r\n                    targetPath = result['open.url']\r\n                        .substring(result['open.url'].lastIndexOf('/') + 1) ||\r\n                        'index';\r\n                    targetUrl = result['open.url'];\r\n                }\r\n            } else if (result['filename']) {\r\n                targetPath = result['filename'];\r\n                targetUrl = `data:text/plain,`;\r\n            }\r\n        }\r\n        if (! targetUrl) {\r\n            if (! showWelcomeFile) {\r\n                return void 0;\r\n            }\r\n            targetPath = 'Welcome.md';\r\n            targetUrl = welcomeFile;\r\n        }\r\n        const response = await fetch(targetUrl, {});\r\n        if (response.ok) {\r\n            return {\r\n                path: targetPath,\r\n                text: await response.text(),\r\n            };\r\n        }\r\n        throw new Error('Fetching url failed. Network response was not ok, or CORB error.');\r\n    });\r\n\r\n    openURL_ = (async (url) => {\r\n        window.open(url, '_blank', 'noopener');\r\n        return true;\r\n    });\r\n\r\n    openNewWindow_ = (async () => {\r\n        window.open(`${window.location.pathname}${showWelcomeFile ? '#filename=Untitled.md' : ''}`, '_blank', 'noopener');\r\n        return true;\r\n    });\r\n\r\n    const LM_async_ = (() => {\r\n        let config = Object.assign({}, liyad.defaultConfig);\r\n        config.reservedNames = Object.assign({}, config.reservedNames, {\r\n            Template: '$concat',\r\n        });\r\n    \r\n        config = liyad.installCore(config);\r\n        config = liyad.installArithmetic(config);\r\n        config = liyad.installSequence(config);\r\n        config = liyad.installConcurrent(config);\r\n    \r\n        config.stripComments = true;\r\n        config.returnMultipleRoot = true;\r\n    \r\n        return liyad.SExpressionAsync(config);\r\n    })();\r\n\r\n    LM_async_\r\n    .setGlobals({})\r\n    .install(config => {\r\n        const operators = [{\r\n            name: '$>',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...command) => {\r\n                return new Promise((resolve, reject) => {\r\n                    reject(new Error('cannot execute shell'));\r\n                });\r\n            },\r\n        }];\r\n        config.funcs = (config.funcs || []).concat(operators);\r\n        // config.macros = (config.macros || []).concat(macros);\r\n        // config.symbols = (config.symbols || []).concat(symbols);\r\n        return config;\r\n    });\r\n\r\n    class Backend {\r\n        async setFrontend(frontend) {\r\n            // Node world can now use frontend RPC handle.\r\n            this.frontend_ = frontend;\r\n            (async () => {\r\n                //\r\n            })();\r\n        }\r\n\r\n        async runCommand(command) {\r\n            return LM_async_(command);\r\n        }\r\n\r\n        async runCommandAST(ast) {\r\n            return LM_async_.evaluateAST(ast);\r\n        }\r\n    }\r\n\r\n    const backend_ = new Backend;\r\n\r\n    rpc_ = {\r\n        handle: x => x,\r\n    };\r\n\r\n    carlo_ = {\r\n        /** @type {() => Promise<Backend[]>} */\r\n        loadParams: (async () => {\r\n            return [backend_];\r\n        }),\r\n        /**\r\n         * @type {(file: File) => Promise<{path: string, fileBodyText: string}>}\r\n         * File is dropped.\r\n         * Get the file info and content.\r\n         */\r\n        fileInfo: (async (file) => {\r\n            const promise = new Promise((resolve, reject) => {\r\n                // Reset the opened file's handler\r\n                nativeSaveFileHandle = null;\r\n\r\n                const reader = new FileReader();\r\n                // eslint-disable-next-line no-unused-vars\r\n                reader.onload = ev => {\r\n                    resolve({\r\n                        path: file.name,\r\n                        fileBodyText: reader.result,\r\n                    });\r\n                };\r\n                // eslint-disable-next-line no-unused-vars\r\n                reader.onerror = ev => {\r\n                    reject(reader.error);\r\n                };\r\n                reader.readAsText(file, 'UTF-8');\r\n            });\r\n            return promise;\r\n        }),\r\n    };\r\n}\r\n\r\n\r\nexport const resourceBaseDirectory = resourceBaseDirectory_;\r\nexport const nativeNotifyEditorDirty = nativeNotifyEditorDirty_;\r\nexport const nativeAlert = nativeAlert_;\r\nexport const nativeAlertSync = nativeAlertSync_;\r\nexport const nativeConfirm = nativeConfirm_;\r\nexport const nativeConfirmSync = nativeConfirmSync_;\r\nexport const nativeFileOpenDialog = nativeFileOpenDialog_;\r\nexport const nativeFileSaveDialog = nativeFileSaveDialog_;\r\nexport const renderByMenneu = renderByMenneu_;\r\nexport const loadFile = loadFile_;\r\nexport const saveFile = saveFile_;\r\nexport const saveFileAs = saveFile_;  // Browser backend have no `saveFileAs` API\r\nexport const listDirectory = listDirectory_;\r\nexport const listDesktopDirectory = listDesktopDirectory_;\r\nexport const listHomeDirectory = listHomeDirectory_;\r\nexport const fileExists = fileExists_;\r\nexport const pathJoin = pathJoin_;\r\nexport const getDirName = getDirName_;\r\nexport const getBaseName = getBaseName_;\r\nexport const getStartupFile = getStartupFile_;\r\nexport const openURL = openURL_;\r\nexport const openNewWindow = openNewWindow_;\r\nexport const rpc = rpc_;\r\nexport const carlo = carlo_;\r\n","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport * as carloBackend    from './backends/carlo.js';\r\nimport * as electronBackend from './backends/electron.js';\r\nimport * as browserBackend  from './backends/browser.js';\r\n\r\n\r\nlet backend = null;\r\n\r\n\r\nif (window._MDNE_BACKEND_TYPE === 'CARLO_RPC') {\r\n    // Carlo backend\r\n    backend = carloBackend;\r\n} else if (window._MDNE_BACKEND_TYPE === 'ELECTRON_IPC') {\r\n    // Electron backend\r\n    backend = electronBackend;\r\n} else if (window._MDNE_BACKEND_TYPE === 'EXTERNAL') {\r\n    // External backend\r\n    backend = {...window._mdneExternalBackend}; // prevent highjacking\r\n} else if (window._MDNE_BACKEND_TYPE === 'EXTERNAL_MIXED') {\r\n    // External backend\r\n    if (typeof window._mdneExternalBackend === 'function') {\r\n        backend = {...browserBackend, ...window._mdneExternalBackend(browserBackend)}; // prevent highjacking\r\n    } else {\r\n        backend = {...browserBackend, ...window._mdneExternalBackend}; // prevent highjacking\r\n    }\r\n} else {\r\n    // Fallback (for Browser)\r\n    backend = browserBackend;\r\n}\r\n\r\n\r\nexport const resourceBaseDirectory = backend.resourceBaseDirectory ?? '';\r\nexport const nativeNotifyEditorDirty = backend.nativeNotifyEditorDirty;\r\nexport const nativeAlert = backend.nativeAlert;\r\nexport const nativeAlertSync = backend.nativeAlertSync;\r\nexport const nativeConfirm = backend.nativeConfirm;\r\nexport const nativeConfirmSync = backend.nativeConfirmSync;\r\nexport const nativeFileOpenDialog = backend.nativeFileOpenDialog;\r\nexport const nativeFileSaveDialog = backend.nativeFileSaveDialog;\r\nexport const renderByMenneu = backend.renderByMenneu;\r\nexport const loadFile = backend.loadFile;\r\nexport const saveFile = backend.saveFile;\r\nexport const saveFileAs = backend.saveFileAs;\r\nexport const listDirectory = backend.listDirectory;\r\nexport const listDesktopDirectory = backend.listDesktopDirectory;\r\nexport const listHomeDirectory = backend.listHomeDirectory;\r\nexport const fileExists = backend.fileExists;\r\nexport const pathJoin = backend.pathJoin;\r\nexport const getDirName = backend.getDirName;\r\nexport const getBaseName = backend.getBaseName;\r\nexport const getStartupFile = backend.getStartupFile;\r\nexport const openURL = backend.openURL;\r\nexport const openNewWindow = backend.openNewWindow;\r\nexport const rpc = backend.rpc;\r\nexport const carlo = backend.carlo;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nconst LM_async_ = (() => {\r\n    let config = Object.assign({}, liyad.defaultConfig);\r\n    config.reservedNames = Object.assign({}, config.reservedNames, {\r\n        Template: '$concat',\r\n    });\r\n\r\n    config = liyad.installCore(config);\r\n    config = liyad.installArithmetic(config);\r\n    config = liyad.installSequence(config);\r\n    config = liyad.installConcurrent(config);\r\n\r\n    config.stripComments = true;\r\n    config.returnMultipleRoot = true;\r\n\r\n    return liyad.SExpressionAsync(config);\r\n})();\r\n\r\n\r\nLM_async_.setGlobals({});\r\n\r\nexport default LM_async_;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { rpc,\r\n         carlo }     from './backend-api.js';\r\nimport commandRunner from './cmdrunner.js';\r\n\r\n\r\n\r\nclass Frontend {\r\n    runCommand(command) {\r\n        return commandRunner(command);\r\n    }\r\n}\r\n\r\n\r\nexport const frontend_ = new Frontend;\r\nlet backend_ = null;\r\n\r\n\r\nexport async function initBackend() {\r\n    if (backend_) {\r\n        return backend_;\r\n    }\r\n    backend_ = (await carlo.loadParams())[0];\r\n    await backend_.setFrontend(rpc.handle(frontend_));\r\n}\r\n\r\n\r\nexport function frontend() {\r\n    return frontend_;\r\n}\r\n\r\n\r\nexport function backend() {\r\n    return backend_;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nconst AppState = {\r\n    AppName: 'Markdown Editor',\r\n    AceEditor: null,\r\n    filePath: null,\r\n    inputFormat: 'md',\r\n    fileChanged: false,\r\n    skipDropDialog: false,\r\n    invalidate: () => void 0,\r\n};\r\n\r\n\r\nexport function updateAppIndicatorBar() {\r\n    document.title = `${AppState.AppName} - ${\r\n        AppState.fileChanged ? '● ' : ''}${\r\n        AppState.filePath || '(New file)'}`;\r\n    document.getElementById('appIndicatorBar').innerText = `${\r\n        AppState.fileChanged ? '● ' : ''}${\r\n        AppState.filePath || '(New file)'} | mode: ${\r\n        AppState.inputFormat}`;\r\n}\r\n\r\nexport default AppState;\r\n","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { nativeNotifyEditorDirty,\r\n         nativeAlert,\r\n         nativeConfirm } from './backend-api.js';\r\nimport AppState          from './appstate.js';\r\n\r\n\r\n\r\nexport const notifyEditorDirty = (dirty) => {\r\n    AppState.fileChanged = dirty;\r\n    if (nativeNotifyEditorDirty) {\r\n        nativeNotifyEditorDirty(dirty);\r\n    }\r\n}\r\n\r\n\r\nexport const alertWrap = async (message) => {\r\n    if (nativeAlert) {\r\n        await nativeAlert(String(message));\r\n    } else {\r\n        alert(message);\r\n    }\r\n}\r\n\r\n\r\nexport const confirmWrap = async (message) => {\r\n    if (nativeConfirm) {\r\n        return await nativeConfirm(String(message));\r\n    } else {\r\n        return confirm(message);\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\n/**\r\n * @param {string} path\r\n * @return {string}\r\n */\r\nexport function getInputFormat(path) {\r\n    switch (path.lastIndexOf('.') >= 0 ?\r\n        path.toLowerCase().slice(path.lastIndexOf('.')) : '') {\r\n    case '.md': case '.markdown':\r\n        return 'md';\r\n    case '.html': case '.htm':\r\n        return 'html';\r\n    case '.lisp': case '.lsx':\r\n        return 'lisp';\r\n    case '.tex':\r\n        return 'tex';\r\n    case '.latex':\r\n        return 'latex';\r\n    case '.css':\r\n        return 'css';\r\n    case '.less':\r\n        return 'less';\r\n    case '.sass':\r\n        return 'sass';\r\n    case '.scss':\r\n        return 'scss';\r\n    case '.json':\r\n        return 'json';\r\n    case '.json5':\r\n        return 'json5';\r\n    case '.js': case '.mjs': case '.cjs':\r\n        return 'js';\r\n    case '.jsx':\r\n        return 'jsx';\r\n    case '.ts':\r\n        return 'ts';\r\n    case '.tsx':\r\n        return 'tsx';\r\n    case '.svg':\r\n        return 'svg';\r\n    case '.xml':\r\n        return 'xml';\r\n    case '.yaml': case '.yml':\r\n        return 'yaml';\r\n    case '.toml':\r\n        return 'toml';\r\n    case '.ini':\r\n        return 'ini';\r\n    case '.graphql': case '.gql':\r\n        return 'graphql';\r\n    case '.proto': case '.proto2': case '.proto3':\r\n        return 'protobuf';\r\n    case '.sql':\r\n        return 'sql';\r\n    case '.cs':\r\n        return 'csharp';\r\n    case '.go':\r\n        return 'golang';\r\n    case '.rb':\r\n        return 'ruby';\r\n    case '.rs':\r\n        return 'rust';\r\n    case '.py':\r\n        return 'python';\r\n    case '.java':\r\n        return 'java';\r\n    case '.kt':\r\n        return 'kotlin';\r\n    case '.r':\r\n        return 'r';\r\n    case '.sh':\r\n        return 'sh';\r\n    case '.dockerfile':\r\n        return 'dockerfile';\r\n    case '.makefile':\r\n        return 'makefile';\r\n    default:\r\n        if (path.toLowerCase().endsWith('dockerfile')) {\r\n            return 'dockerfile';\r\n        }\r\n        if (path.toLowerCase().endsWith('makefile')) {\r\n            return 'makefile';\r\n        }\r\n        return 'text';\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @param {string} inputFormat\r\n * @return {boolean}\r\n */\r\nexport function isPreviewable(inputFormat) {\r\n    switch (inputFormat) {\r\n    case 'md':\r\n        return true;\r\n    case 'html':\r\n        return true;\r\n    case 'lisp':\r\n        return true;\r\n    default:\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @param {string} inputFormat\r\n * @return {string | undefined}\r\n */\r\nexport function getAceEditorMode(inputFormat) {\r\n    switch (inputFormat) {\r\n    case 'md':\r\n        return 'ace/mode/markdown';\r\n    case 'html':\r\n        return 'ace/mode/html';\r\n    case 'lisp':\r\n        return 'ace/mode/lisp';\r\n    case 'tex':\r\n        return 'ace/mode/tex';\r\n    case 'latex':\r\n        return 'ace/mode/latex';\r\n    case 'css':\r\n        return 'ace/mode/css';\r\n    case 'less':\r\n        return 'ace/mode/less';\r\n    case 'sass':\r\n        return 'ace/mode/sass';\r\n    case 'scss':\r\n        return 'ace/mode/scss';\r\n    case 'json':\r\n        return 'ace/mode/json';\r\n    case 'json5':\r\n        return 'ace/mode/json5';\r\n    case 'js':\r\n        return 'ace/mode/javascript';\r\n    case 'jsx':\r\n        return 'ace/mode/jsx';\r\n    case 'ts':\r\n        return 'ace/mode/typescript';\r\n    case 'tsx':\r\n        return 'ace/mode/tsx';\r\n    case 'svg':\r\n        return 'ace/mode/svg';\r\n    case 'xml':\r\n        return 'ace/mode/xml';\r\n    case 'yaml':\r\n        return 'ace/mode/yaml';\r\n    case 'toml':\r\n        return 'ace/mode/toml';\r\n    case 'ini':\r\n        return 'ace/mode/ini';\r\n    case 'graphql':\r\n        return 'ace/mode/graphqlshema';\r\n    case 'protobuf':\r\n        return 'ace/mode/protobuf';\r\n    case 'sql':\r\n        return 'ace/mode/sql';\r\n    case 'csharp':\r\n        return 'ace/mode/csharp';\r\n    case 'golang':\r\n        return 'ace/mode/golang';\r\n    case 'ruby':\r\n        return 'ace/mode/ruby';\r\n    case 'rust':\r\n        return 'ace/mode/rust';\r\n    case 'python':\r\n        return 'ace/mode/python';\r\n    case 'java':\r\n        return 'ace/mode/java';\r\n    case 'kotlin':\r\n        return 'ace/mode/kotlin';\r\n    case 'r':\r\n        return 'ace/mode/r';\r\n    case 'sh':\r\n        return 'ace/mode/sh';\r\n    case 'dockerfile':\r\n        return 'ace/mode/dockerfile';\r\n    case 'makefile':\r\n        return 'ace/mode/makefile';\r\n    case 'text':\r\n        return 'ace/mode/text';\r\n    default:\r\n        return void 0;\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { saveFile }              from '../libs/backend-api.js';\r\nimport { notifyEditorDirty,\r\n         alertWrap }             from '../libs/backend-wrap.js';\r\nimport AppState,\r\n       { updateAppIndicatorBar } from '../libs/appstate.js';\r\nimport { getInputFormat,\r\n         getAceEditorMode }      from '../libs/modes.js';\r\n\r\n\r\n\r\nexport default class AceEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.editor = null;\r\n\r\n        this.outerWrapRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editor = ace.edit(this.props.id);\r\n        this.editor.setFontSize(this.props.fontSize);\r\n        this.editor.setTheme('ace/theme/monokai');\r\n        this.editor.session.setMode('ace/mode/markdown');\r\n        this.editor.commands.addCommand({\r\n            name: 'save',\r\n            bindKey: { win: 'Ctrl-S', mac: 'Cmd-S' },\r\n            exec: async (editor) => {\r\n                if (AppState.filePath) {\r\n                    try {\r\n                        // NOTE: In the browser backend, the filepath and filename may change on the first save.\r\n\r\n                        const fileInfo = await saveFile(editor.getValue(), AppState.filePath);\r\n                        AppState.filePath = fileInfo.path;\r\n                        AppState.inputFormat = getInputFormat(AppState.filePath);\r\n\r\n                        editor.session.setMode(getAceEditorMode(AppState.inputFormat));\r\n                        editor.session.getUndoManager().markClean();\r\n                        notifyEditorDirty(false);\r\n                        updateAppIndicatorBar();\r\n                    } catch (e) {\r\n                        await alertWrap(e);\r\n                    }\r\n                } else {\r\n                    this.props.onSaveAs({});\r\n                }\r\n            }\r\n        })\r\n\r\n        this.editor.on('change', (o) => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(o);\r\n            }\r\n        });\r\n        this.editor.session.on('changeScrollTop', (y) => {\r\n            if (this.props.onChangeScrollTop) {\r\n                this.props.onChangeScrollTop(y, this.editor.session.getScreenLength() * this.editor.renderer.lineHeight);\r\n            }\r\n        });\r\n        this.editor.session.on('changeScrollLeft', (x) => {\r\n            if (this.props.onChangeScrollLeft) {\r\n                this.props.onChangeScrollLeft(x);\r\n            }\r\n        });\r\n\r\n        AppState.AceEditor = AppState.AceEditor || {};\r\n        AppState.AceEditor[this.props.id] = this.editor;\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (div (@ (ref ${this.outerWrapRef})\r\n                (className\r\n                    ($concat \"AceEditorOuterWrap\"\r\n                             ${this.props.stretched ? \" stretched\" : \"\"}\r\n                             ${this.props.collapsed ? \" collapsed\" : \"\"} )))\r\n            (div (@ (id ${this.props.id})\r\n                    (className \"AceEditorDiv\") )))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { loadFile,\r\n         pathJoin,\r\n         carlo }                 from '../libs/backend-api.js';\r\nimport { notifyEditorDirty,\r\n         alertWrap }             from '../libs/backend-wrap.js';\r\nimport AppState,\r\n       { updateAppIndicatorBar } from '../libs/appstate.js';\r\nimport { getInputFormat,\r\n         getAceEditorMode }      from '../libs/modes.js';\r\nimport { openFilter }            from '../libs/filefilters';\r\n\r\n\r\n\r\nexport default class FileDropDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogRef = React.createRef();\r\n    }\r\n\r\n    showModal(options, handler) {\r\n        this.options = options;\r\n        this.handler = handler;\r\n        if (AppState.skipDropDialog) {\r\n            this.handleOnOpenDialogClick(null);\r\n        } else {\r\n            this.dialogRef.current.showModal();\r\n            document.activeElement.blur();\r\n        }\r\n    }\r\n\r\n    openFile(path, text) {\r\n        AppState.filePath = path;\r\n        AppState.inputFormat = getInputFormat(AppState.filePath);\r\n        notifyEditorDirty(false);\r\n        updateAppIndicatorBar();\r\n\r\n        const editor = AppState.AceEditor[this.options.aceId];\r\n\r\n        editor.clearSelection();\r\n        editor.session.setMode(getAceEditorMode(AppState.inputFormat));\r\n        editor.setValue(text);\r\n        editor.clearSelection();\r\n        editor.session.getUndoManager().markClean();\r\n        editor.moveCursorTo(0, 0);\r\n    }\r\n\r\n    openFileAndClose(path, text) {\r\n        this.openFile(path, text);\r\n\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n        this.handler();\r\n    }\r\n\r\n    handleOnDragOver(ev) {\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * @param {DragEvent} ev \r\n     */\r\n    async handleOnDrop(ev) {\r\n        try {\r\n            ev.preventDefault();\r\n            const files = [];\r\n            for (let i = 0; i < ev.dataTransfer.files.length; i++) {\r\n                files.push(carlo.fileInfo(ev.dataTransfer.files[i]));\r\n                break; // Only use first item\r\n            }\r\n            const paths = await Promise.all(files);\r\n            const texts = await Promise.all(\r\n                paths.map(x => x.fileBodyText ?\r\n                    Promise.resolve(x.fileBodyText) : // emulation\r\n                    loadFile(x.path)                  // carlo\r\n                ));\r\n\r\n            this.openFileAndClose(paths[0].path, texts[0]);\r\n        } catch (e) {\r\n            await alertWrap(e);\r\n            AppState.filePath = null;\r\n            notifyEditorDirty(false);\r\n            updateAppIndicatorBar();\r\n        }\r\n    }\r\n\r\n    async handleOnOpenDialogClick(ev) {\r\n        if (ev) {\r\n            this.handleCancelClick(ev);\r\n        }\r\n        try {\r\n            this.options.fileOpenDialog.showModal({\r\n                title: 'Open',\r\n                currentAceId: this.options.aceId,\r\n                currentFilePath: AppState.filePath,\r\n                fileTypes: openFilter,\r\n            }, async (currentDir, fileName) => {\r\n                const path = await pathJoin(currentDir, fileName);\r\n                const text = await loadFile(path);\r\n\r\n                this.openFileAndClose(path, text);\r\n            });\r\n        } catch (e) {\r\n            await alertWrap(e);\r\n            AppState.filePath = null;\r\n            notifyEditorDirty(false);\r\n            updateAppIndicatorBar();\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCancelClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (dialog (@ (ref ${this.dialogRef})\r\n                   (style (backgroundColor \"#333\")\r\n                          (color \"white\") ))\r\n            (h5 \"Open file\")\r\n            (div (@ (style (width \"80vw\")\r\n                           (height \"70vh\")\r\n                           (display \"table-cell\")\r\n                           (textAlign \"center\")\r\n                           (verticalAlign \"middle\") )\r\n                    (onDragOver ${(ev) => {this.handleOnDragOver(ev)}})\r\n                    (onDragLeave ${() => {  }})\r\n                    (onDrop ${async (ev) => {await this.handleOnDrop(ev)}}) )\r\n                (i (@ (className \"material-icons large\")) \"insert_drive_file\")(br)\r\n                \"Drop file here.\" (br)(br)(br)\r\n                (a (@ (style (cursor \"pointer\")\r\n                             (color \"white\")\r\n                             (border-bottom \"1px solid white\") )\r\n                      (onClick ${(ev) => {this.handleOnOpenDialogClick(ev)}}) )\r\n                      \"Or click here to open the file dialog.\" ))\r\n            (div (@ (style (display \"flex\")\r\n                           (justifyContent \"center\") ))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn grey darken-3\")\r\n                           (onClick ${(ev) => this.handleCancelClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"cancel\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"Cancel\") )))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { nativeFileOpenDialog,\r\n         listDirectory,\r\n         listDesktopDirectory,\r\n         listHomeDirectory,\r\n         fileExists,\r\n         getDirName,\r\n         getBaseName } from '../libs/backend-api.js';\r\nimport { alertWrap }   from '../libs/backend-wrap.js';\r\n\r\n\r\n\r\nexport default class FileOpenDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.title = '';\r\n        this.state.currentFilePath = '';\r\n        this.state.fileTypes = [];\r\n        this.state.selectedFileType = '*';\r\n\r\n        this.state.currentDir = '';\r\n        this.state.currentDirFiles = [];\r\n        this.state.inputFileName = '';\r\n\r\n        this.dialogRef = React.createRef();\r\n        this.fileNameInputRef = React.createRef();\r\n        this.fileTypeSelectorRef = React.createRef();\r\n    }\r\n\r\n    showModal(options, handler) {\r\n        this.setState({title: options.title});\r\n        this.setState({currentFilePath: options.currentFilePath});\r\n        this.setState({fileTypes: options.fileTypes});\r\n\r\n        let selectedType = options.fileTypes[0];\r\n        this.setState({selectedFileType: selectedType.value});\r\n\r\n        this.setState({currentDir: ''});\r\n        this.setState({currentDirFiles: []});\r\n        this.setState({inputFileName: ''});\r\n        this.options = options;\r\n        this.handler = handler;\r\n\r\n        if (nativeFileOpenDialog) {\r\n            (async () => {\r\n                const filePaths = await nativeFileOpenDialog(\r\n                    options.title,\r\n                    options.currentFilePath,\r\n                    options.fileTypes.map(x => ({\r\n                        name: x.text,\r\n                        extensions: x.exts && x.exts.length > 0 ? x.exts.map(t => t.slice(1)) : ['*'],\r\n                        mime: x.mime,\r\n                    })));\r\n                if (filePaths) {\r\n                    this.handler(await getDirName(filePaths[0]), await getBaseName(filePaths[0]));\r\n                }\r\n            })();\r\n        } else {\r\n            this.dialogRef.current.showModal();\r\n            document.activeElement.blur();\r\n\r\n            listDirectory(options.currentFilePath)\r\n            .then(info => {\r\n                this.setState({currentDir: info.directory});\r\n                this.setState({currentDirFiles: info.files});\r\n            })\r\n            // eslint-disable-next-line no-unused-vars\r\n            .catch(e => {\r\n                listDesktopDirectory()\r\n                .then(info => {\r\n                    this.setState({currentDir: info.directory});\r\n                    this.setState({currentDirFiles: info.files});\r\n                })\r\n                // eslint-disable-next-line no-unused-vars\r\n                .catch(e2 => {\r\n                    listHomeDirectory()\r\n                    .then(info => {\r\n                        this.setState({currentDir: info.directory});\r\n                        this.setState({currentDirFiles: info.files});\r\n                    })\r\n                    .catch(e3 => {\r\n                        // TODO: await it.\r\n                        alertWrap(e3);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFileListItemClick(ev, name, isDir) {\r\n        if (isDir) {\r\n            this.fileNameInputRef.current.focus();\r\n            this.setState({inputFileName: ''});\r\n\r\n            listDirectory(this.state.currentDir, name)\r\n            .then(info => {\r\n                this.setState({currentDir: info.directory});\r\n                this.setState({currentDirFiles: info.files});\r\n            })\r\n            .catch(e => {\r\n                // TODO: await it.\r\n                alertWrap(e);\r\n            });\r\n        } else {\r\n            this.fileNameInputRef.current.focus();\r\n            this.setState({inputFileName: name});\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    async handleOkClick(ev) {\r\n        try {\r\n            if (this.state.inputFileName.trim() === '') {\r\n                return;\r\n            }\r\n\r\n            let fileName = this.state.inputFileName;\r\n\r\n            if (! (await fileExists(this.state.currentDir, fileName))) {\r\n                await alertWrap('File does not exist.');\r\n                return;\r\n            }\r\n\r\n            this.handler(this.state.currentDir, fileName);\r\n\r\n            document.activeElement.blur();\r\n            this.dialogRef.current.close();\r\n        } catch (e) {\r\n            await alertWrap(e);\r\n        }\r\n    }\r\n\r\n    getFilteredCurrentDirFiles() {\r\n        return this.state.currentDirFiles.filter(x => {\r\n            if (x.isDirectory) {\r\n                return true;\r\n            }\r\n            let fileName = x.name;\r\n            const ext = fileName.lastIndexOf('.') >= 0 ?\r\n                fileName.toLowerCase().slice(fileName.lastIndexOf('.')) : '';\r\n            let selectedType = this.options.fileTypes.filter(x => x.value === this.state.selectedFileType)[0];\r\n            if (!selectedType || !selectedType.exts || selectedType.exts.length === 0) {\r\n                return true;\r\n            }\r\n            return (selectedType.exts.filter(z => z === ext)[0]);\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCancelClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (dialog (@ (ref ${this.dialogRef})\r\n                   (style (backgroundColor \"#333\")\r\n                          (color \"white\") ))\r\n            (h5 ${this.state.title})\r\n            (div ${this.state.currentDir})\r\n            (div (@ (style (width \"80vw\")\r\n                           (height \"70vh\")\r\n                           (display \"table-cell\")\r\n                           (textAlign \"center\") ))\r\n                (div (@ (style (color \"black\")\r\n                               (text-align \"left\")\r\n                               (height \"calc(100% - 100px)\")\r\n                               (overflow-x \"auto\")\r\n                               (overflow-y \"scroll\") ))\r\n                    (ul (@ (className \"collection\")\r\n                           (style (margin \"0\")) )\r\n                        ($=for ${this.getFilteredCurrentDirFiles()}\r\n                            (li (@ (key $index)\r\n                                   (className \"collection-item\"))\r\n                                (a (@ (onClick (|-> (ev) use ($data)\r\n                                          (${(ev, name, isDir) => this.handleFileListItemClick(ev, name, isDir)}\r\n                                              ev ::$data:name ::$data:isDirectory )))\r\n                                      (style (cursor \"pointer\")\r\n                                             (color \"inherit\")\r\n                                             (text-decoration \"none\") ))\r\n                                    (i (@ (className \"material-icons tiny\")\r\n                                          (style (margin \"0 10px 10px 10px\")) )\r\n                                        ($if ::$data:isDirectory \"folder\" \"insert_drive_file\") )\r\n                                    ::$data:name )) )))\r\n                (div (@ (className \"row\"))\r\n                    (div (@ (className \"input-field col s10\"))\r\n                        (label \"File name\")\r\n                        (input (@ (ref ${this.fileNameInputRef})\r\n                                  (style (color \"white\"))\r\n                                  (type \"text\")\r\n                                  (spellcheck \"false\")\r\n                                  (readonly \"readonly\")\r\n                                  (onChange ${() => this.setState({inputFileName: this.fileNameInputRef.current.value})})\r\n                                  (value ${this.state.inputFileName}) )))\r\n                    (div (@ (className \"input-field col s2\"))\r\n                        (select (@ (ref ${this.fileTypeSelectorRef})\r\n                                   (className \"browser-default\")\r\n                                   (onChange ${() => this.setState({selectedFileType: this.fileTypeSelectorRef.current.value})}) )\r\n                            ($=for ${this.state.fileTypes}\r\n                                (option (@ (key   ::$data:value)\r\n                                           (value ::$data:value)\r\n                                           (($if (== ${this.state.selectedFileType} ::$data:value)\r\n                                               \"selected\" \"data-x-no-selected\" )))\r\n                                    ::$data:text ))))))\r\n            (div (@ (style (display \"flex\")\r\n                           (justifyContent \"center\") ))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn grey darken-3\")\r\n                           (onClick ${(ev) => this.handleCancelClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"cancel\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"Cancel\") )\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn blue darken-2\")\r\n                           (onClick ${(ev) => this.handleOkClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"check\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"OK\") ) ))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { nativeFileSaveDialog,\r\n         listDirectory,\r\n         listDesktopDirectory,\r\n         listHomeDirectory,\r\n         fileExists,\r\n         getDirName,\r\n         getBaseName } from '../libs/backend-api.js';\r\nimport { alertWrap,\r\n         confirmWrap } from '../libs/backend-wrap.js';\r\n\r\n\r\n\r\nexport default class FileSaveDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.title = '';\r\n        this.state.currentFilePath = '';\r\n        this.state.fileTypes = [];\r\n        this.state.selectedFileType = '*';\r\n\r\n        this.state.currentDir = '';\r\n        this.state.currentDirFiles = [];\r\n        this.state.inputFileName = '';\r\n\r\n        this.dialogRef = React.createRef();\r\n        this.fileNameInputRef = React.createRef();\r\n        this.fileTypeSelectorRef = React.createRef();\r\n    }\r\n\r\n    showModal(options, handler) {\r\n        this.setState({title: options.title});\r\n        this.setState({currentFilePath: options.currentFilePath});\r\n        this.setState({fileTypes: options.fileTypes});\r\n\r\n        const ext = options.currentFilePath ?\r\n            (options.currentFilePath.lastIndexOf('.') >= 0 ?\r\n                options.currentFilePath.toLowerCase()\r\n                .slice(options.currentFilePath.lastIndexOf('.')) : '') : '';\r\n        let selectedType = options.fileTypes.filter(x => x.exts.filter(z => z === ext)[0])[0];\r\n        let allFilesType = options.fileTypes.filter(x => x.value === '*')[0];\r\n        this.setState({selectedFileType:\r\n            options.forExport ? options.fileTypes[0].value :\r\n                (selectedType ? selectedType.value :\r\n                    (ext !== '' ? allFilesType.value : options.fileTypes[0].value))});\r\n\r\n        this.setState({currentDir: ''});\r\n        this.setState({currentDirFiles: []});\r\n        this.setState({inputFileName: ''});\r\n        this.options = options;\r\n        this.handler = handler;\r\n\r\n        if (nativeFileSaveDialog) {\r\n            (async () => {\r\n                const fileName = await nativeFileSaveDialog(\r\n                    options.title,\r\n                    options.currentFilePath,\r\n                    options.fileTypes.map(x => ({\r\n                        name: x.text,\r\n                        extensions: x.exts && x.exts.length > 0 ? x.exts.map(t => t.slice(1)) : ['*'],\r\n                        mime: x.mime,\r\n                    })), options.intent);\r\n                if (fileName) {\r\n                    this.handler(await getDirName(fileName), await getBaseName(fileName));\r\n                }\r\n            })();\r\n        } else {\r\n            this.dialogRef.current.showModal();\r\n            document.activeElement.blur();\r\n\r\n            listDirectory(options.currentFilePath)\r\n            .then(info => {\r\n                this.setState({currentDir: info.directory});\r\n                this.setState({currentDirFiles: info.files});\r\n            })\r\n            // eslint-disable-next-line no-unused-vars\r\n            .catch(e => {\r\n                listDesktopDirectory()\r\n                .then(info => {\r\n                    this.setState({currentDir: info.directory});\r\n                    this.setState({currentDirFiles: info.files});\r\n                })\r\n                // eslint-disable-next-line no-unused-vars\r\n                .catch(e2 => {\r\n                    listHomeDirectory()\r\n                    .then(info => {\r\n                        this.setState({currentDir: info.directory});\r\n                        this.setState({currentDirFiles: info.files});\r\n                    })\r\n                    .catch(e3 => {\r\n                        // TODO: await it.\r\n                        alertWrap(e3);\r\n                    });\r\n                });\r\n            });\r\n\r\n            getBaseName(options.currentFilePath)\r\n            .then(name => {\r\n                this.fileNameInputRef.current.focus();\r\n                this.setState({inputFileName: name});\r\n            })\r\n            // eslint-disable-next-line no-unused-vars\r\n            .catch(e => {\r\n                // NOTE: ignore error\r\n                // alertWrap(e); // TODO: await it.\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFileListItemClick(ev, name, isDir) {\r\n        if (isDir) {\r\n            this.fileNameInputRef.current.focus();\r\n\r\n            listDirectory(this.state.currentDir, name)\r\n            .then(info => {\r\n                this.setState({currentDir: info.directory});\r\n                this.setState({currentDirFiles: info.files});\r\n            })\r\n            .catch(e => {\r\n                // TODO: await it.\r\n                alertWrap(e);\r\n            });\r\n        } else {\r\n            this.fileNameInputRef.current.focus();\r\n            this.setState({inputFileName: name});\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    async handleOkClick(ev) {\r\n        try {\r\n            if (this.state.inputFileName.trim() === '') {\r\n                return;\r\n            }\r\n\r\n            let fileName = this.state.inputFileName;\r\n            const ext = fileName.lastIndexOf('.') >= 0 ?\r\n                fileName.toLowerCase().slice(fileName.lastIndexOf('.')) : '';\r\n            let selectedType = this.options.fileTypes.filter(x => x.value === this.state.selectedFileType)[0];\r\n            if (ext === '' && selectedType) {\r\n                fileName += selectedType.exts[0] || '';\r\n            } else if (! selectedType.exts.filter(x => x === ext)[0]) {\r\n                fileName += selectedType.exts[0] || '';\r\n            }\r\n\r\n            if (await fileExists(this.state.currentDir, fileName)) {\r\n                if (! await confirmWrap('Are you sure want to overwrite the existing file?')) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.handler(this.state.currentDir, fileName);\r\n\r\n            document.activeElement.blur();\r\n            this.dialogRef.current.close();\r\n        } catch (e) {\r\n            await alertWrap(e);\r\n        }\r\n    }\r\n\r\n    getFilteredCurrentDirFiles() {\r\n        return this.state.currentDirFiles.filter(x => {\r\n            if (x.isDirectory) {\r\n                return true;\r\n            }\r\n            let fileName = x.name;\r\n            const ext = fileName.lastIndexOf('.') >= 0 ?\r\n                fileName.toLowerCase().slice(fileName.lastIndexOf('.')) : '';\r\n            let selectedType = this.options.fileTypes.filter(x => x.value === this.state.selectedFileType)[0];\r\n            if (!selectedType || !selectedType.exts || selectedType.exts.length === 0) {\r\n                return true;\r\n            }\r\n            return (selectedType.exts.filter(z => z === ext)[0]);\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCancelClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (dialog (@ (ref ${this.dialogRef})\r\n                   (style (backgroundColor \"#333\")\r\n                          (color \"white\") ))\r\n            (h5 ${this.state.title})\r\n            (div ${this.state.currentDir})\r\n            (div (@ (style (width \"80vw\")\r\n                           (height \"70vh\")\r\n                           (display \"table-cell\")\r\n                           (textAlign \"center\") ))\r\n                (div (@ (style (color \"black\")\r\n                               (text-align \"left\")\r\n                               (height \"calc(100% - 100px)\")\r\n                               (overflow-x \"auto\")\r\n                               (overflow-y \"scroll\") ))\r\n                    (ul (@ (className \"collection\")\r\n                           (style (margin \"0\")) )\r\n                        ($=for ${this.getFilteredCurrentDirFiles()}\r\n                            (li (@ (key $index)\r\n                                   (className \"collection-item\"))\r\n                                (a (@ (onClick (|-> (ev) use ($data)\r\n                                          (${(ev, name, isDir) => this.handleFileListItemClick(ev, name, isDir)}\r\n                                              ev ::$data:name ::$data:isDirectory )))\r\n                                      (style (cursor \"pointer\")\r\n                                             (color \"inherit\")\r\n                                             (text-decoration \"none\") ))\r\n                                    (i (@ (className \"material-icons tiny\")\r\n                                          (style (margin \"0 10px 10px 10px\")) )\r\n                                        ($if ::$data:isDirectory \"folder\" \"insert_drive_file\") )\r\n                                    ::$data:name )) )))\r\n                (div (@ (className \"row\"))\r\n                    (div (@ (className \"input-field col s10\"))\r\n                        (label \"File name\")\r\n                        (input (@ (ref ${this.fileNameInputRef})\r\n                                  (style (color \"white\"))\r\n                                  (type \"text\")\r\n                                  (spellcheck \"false\")\r\n                                  (onChange ${() => this.setState({inputFileName: this.fileNameInputRef.current.value})})\r\n                                  (value ${this.state.inputFileName}) )))\r\n                    (div (@ (className \"input-field col s2\"))\r\n                        (select (@ (ref ${this.fileTypeSelectorRef})\r\n                                   (className \"browser-default\")\r\n                                   (onChange ${() => this.setState({selectedFileType: this.fileTypeSelectorRef.current.value})}) )\r\n                            ($=for ${this.state.fileTypes}\r\n                                (option (@ (key   ::$data:value)\r\n                                           (value ::$data:value)\r\n                                           (($if (== ${this.state.selectedFileType} ::$data:value)\r\n                                               \"selected\" \"data-x-no-selected\" )))\r\n                                    ::$data:text ))))))\r\n            (div (@ (style (display \"flex\")\r\n                           (justifyContent \"center\") ))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn grey darken-3\")\r\n                           (onClick ${(ev) => this.handleCancelClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"cancel\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"Cancel\") )\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn blue darken-2\")\r\n                           (onClick ${(ev) => this.handleOkClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"check\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"OK\") ) ))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport default class SettingsDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.showFields = false;\r\n        this.state.fontFamily = void 0;\r\n        this.state.fontSize = 14;\r\n        this.state.useSoftTabs = true,\r\n        this.state.tabSize = 4;\r\n        this.state.wrap = false;\r\n        this.state.showInvisibles = false;\r\n        this.state.darkThemePreview = false;\r\n        this.state.theme = 'monokai';\r\n        this.state.enableSnippets = false;\r\n\r\n        this.dialogRef = React.createRef();\r\n    }\r\n\r\n    showModal(options, handler) {\r\n        this.dialogRef.current.showModal();\r\n        document.activeElement.blur();\r\n        this.options = options;\r\n        this.handler = handler;\r\n        this.setState({\r\n            showFields: false,\r\n            fontFamily: options.editor.fontFamily,\r\n            fontSize: options.editor.fontSize > 0 ? options.editor.fontSize : 14,\r\n            useSoftTabs: !!options.editor.useSoftTabs,\r\n            tabSize: options.editor.tabSize,\r\n            wrap: options.editor.wrap === 'off' ? false : (options.editor.wrap === 'free'),\r\n            showInvisibles: !!options.editor.showInvisibles,\r\n            theme: (options.editor.theme || '').replace('ace/theme/', ''),\r\n            enableSnippets: !!options.editor.enableSnippets,\r\n            darkThemePreview: !!options.renderer.darkThemePreview,\r\n            skipDropDialog: !!options.app.skipDropDialog,\r\n        });\r\n        setTimeout(() => this.setState({showFields: true}), 30);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        M.updateTextFields();\r\n        const elems = document.querySelectorAll('select');\r\n        /* const instances = */ M.FormSelect.init(elems, {});\r\n    }\r\n\r\n    handleFontFamilyChange(ev) {\r\n        this.setState({\r\n            fontFamily: (ev.target.value || '').trim() === '' ? null : ev.target.value,\r\n        });\r\n    }\r\n\r\n    handleFontSizeChange(ev) {\r\n        this.setState({\r\n            fontSize: ev.target.value,\r\n        });\r\n    }\r\n\r\n    handleTabSizeChange(ev) {\r\n        this.setState({\r\n            tabSize: Math.floor(Number(ev.target.value)),\r\n        });\r\n    }\r\n\r\n    handleSoftTabsChange(ev) {\r\n        this.setState({\r\n            useSoftTabs: ev.target.checked,\r\n        });\r\n    }\r\n\r\n    handleWrapChange(ev) {\r\n        this.setState({\r\n            wrap: ev.target.checked,\r\n        });\r\n    }\r\n\r\n    handleShowInvisiblesChange(ev) {\r\n        this.setState({\r\n            showInvisibles: ev.target.checked,\r\n        });\r\n    }\r\n\r\n    handleEnableSnippetsChange(ev) {\r\n        this.setState({\r\n            enableSnippets: ev.target.checked,\r\n        });\r\n    }\r\n\r\n    handleDarkThemePreviewChange(ev) {\r\n        this.setState({\r\n            darkThemePreview: ev.target.checked,\r\n        });\r\n    }\r\n\r\n    handleSkipDropDialogChange(ev) {\r\n        this.setState({\r\n            skipDropDialog: ev.target.checked,\r\n        });\r\n    }\r\n\r\n    handleThemeChange(ev) {\r\n        this.setState({\r\n            theme: ev.target.value,\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleOkClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n\r\n        const fontSize = Number(this.state.fontSize);\r\n        this.handler({\r\n            editor: {\r\n                fontFamily: this.state.fontFamily,\r\n                fontSize: fontSize > 0 ? fontSize : 14,\r\n                useSoftTabs: this.state.useSoftTabs,\r\n                tabSize: this.state.tabSize > 0 ? this.state.tabSize : 4,\r\n                wrap: this.state.wrap,\r\n                showInvisibles: this.state.showInvisibles,\r\n                theme: `ace/theme/${this.state.theme}`,\r\n                enableBasicAutocompletion: this.state.enableSnippets,\r\n                enableSnippets: this.state.enableSnippets,\r\n                enableLiveAutocompletion: this.state.enableSnippets,\r\n            },\r\n            renderer: {\r\n                darkThemePreview: this.state.darkThemePreview,\r\n            },\r\n            app: {\r\n                skipDropDialog: this.state.skipDropDialog,\r\n            },\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCancelClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (dialog (@ (ref ${this.dialogRef})\r\n                   (className \"appSettingsDialog-root\")\r\n                   (style (backgroundColor \"#333\")\r\n                          (color \"white\") ))\r\n            (style (@ (dangerouslySetInnerHTML \"\"\"$concat\r\n                .appSettingsDialog-root .select-wrapper input {\r\n                    color: white;\r\n                }\r\n                .appSettingsDialog-root .select-wrapper svg.caret {\r\n                    fill: white;\r\n                }\r\n                \"\"\") ))\r\n            (h5 \"Settings\")\r\n            (div (@ (style (width \"80vw\")\r\n                           (height \"70vh\")\r\n                           (display \"table-cell\")\r\n                           (textAlign \"center\")\r\n                           (paddingTop \"20px\") ))\r\n                ($if ${this.state.showFields} (form\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"0\")) )\r\n                        (div (@ (className \"input-field col s12\"))\r\n                            (input (@ (id \"appSettingsDialog-fontFamily\")\r\n                                      (type \"text\")\r\n                                      (className \"validate\")\r\n                                      (style (color \"white\"))\r\n                                      (value ${this.state.fontFamily})\r\n                                      (onChange ${(ev) => this.handleFontFamilyChange(ev)}) ))\r\n                            (label (@ (for \"appSettingsDialog-fontFamily\"))\r\n                                \"Font family (e.g. Consolas, 'Migu 1M', monospace)\") ))\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"0\")) )\r\n                        (div (@ (className \"input-field col s2\"))\r\n                            (input (@ (id \"appSettingsDialog-fontSize\")\r\n                                      (type \"number\")\r\n                                      (className \"validate\")\r\n                                      (style (color \"white\"))\r\n                                      (value ${this.state.fontSize})\r\n                                      (onChange ${(ev) => this.handleFontSizeChange(ev)}) ))\r\n                            (label (@ (for \"appSettingsDialog-fontSize\"))\r\n                                \"Font size (in points)\") ))\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"0\")) )\r\n                        (div (@ (className \"input-field col s2\"))\r\n                            (input (@ (id \"appSettingsDialog-tabSize\")\r\n                                      (type \"number\")\r\n                                      (className \"validate\")\r\n                                      (style (color \"white\"))\r\n                                      (value ${this.state.tabSize})\r\n                                      (onChange ${(ev) => this.handleTabSizeChange(ev)}) ))\r\n                            (label (@ (for \"appSettingsDialog-tabSize\"))\r\n                                \"Tab size\") )\r\n                        (div (@ (className \"input-field col s4\"))\r\n                            (label\r\n                                (input (@ (type \"checkbox\")\r\n                                          (className \"filled-in\")\r\n                                          (checked ${this.state.useSoftTabs ? 'checked' : ''})\r\n                                          (onChange ${(ev) => this.handleSoftTabsChange(ev)}) ))\r\n                                (span \"Soft tabs\") )))\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"0\")) )\r\n                        (div (@ (className \"input-field col s3\"))\r\n                            (label\r\n                                (input (@ (type \"checkbox\")\r\n                                          (className \"filled-in\")\r\n                                          (checked ${this.state.wrap ? 'checked' : ''})\r\n                                          (onChange ${(ev) => this.handleWrapChange(ev)}) ))\r\n                                (span \"Wrap\") ))\r\n                        (div (@ (className \"input-field col s3\"))\r\n                            (label\r\n                                (input (@ (type \"checkbox\")\r\n                                          (className \"filled-in\")\r\n                                          (checked ${this.state.showInvisibles ? 'checked' : ''})\r\n                                          (onChange ${(ev) => this.handleShowInvisiblesChange(ev)}) ))\r\n                                (span \"Show Invisibles\") ))\r\n                        (div (@ (className \"input-field col s3\"))\r\n                            (label\r\n                                (input (@ (type \"checkbox\")\r\n                                          (className \"filled-in\")\r\n                                          (checked ${this.state.enableSnippets ? 'checked' : ''})\r\n                                          (onChange ${(ev) => this.handleEnableSnippetsChange(ev)}) ))\r\n                                (span \"Enable Snippets\") ))\r\n                        (div (@ (className \"input-field col s3\"))\r\n                            (label\r\n                                (input (@ (type \"checkbox\")\r\n                                          (className \"filled-in\")\r\n                                          (checked ${this.state.darkThemePreview ? 'checked' : ''})\r\n                                          (onChange ${(ev) => this.handleDarkThemePreviewChange(ev)}) ))\r\n                                (span \"Preview in dark theme\") )))\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"0\")) )\r\n                        (div (@ (className \"input-field col s3\"))\r\n                            (label\r\n                                (input (@ (type \"checkbox\")\r\n                                          (className \"filled-in\")\r\n                                          (checked ${this.state.skipDropDialog ? 'checked' : ''})\r\n                                          (onChange ${(ev) => this.handleSkipDropDialogChange(ev)}) ))\r\n                                (span \"Skip file drop dialog\") )))\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"40px 0 0 0\")\r\n                                   (color \"white\") ))\r\n                        (div (@ (className \"input-field col s12\"))\r\n                            (select (@ (id \"appSettingsDialog-theme\")\r\n                                       (onChange ${(ev) => this.handleThemeChange(ev)}) )\r\n                                (option (@ (value \"monokai\")\r\n                                           (selected ${this.state.theme === 'monokai' ? 'selected' : ''})) \"Monokai\")\r\n                                (option (@ (value \"cobalt\")\r\n                                           (selected ${this.state.theme === 'cobalt' ? 'selected' : ''})) \"Cobalt\")\r\n                                (option (@ (value \"terminal\")\r\n                                           (selected ${this.state.theme === 'terminal' ? 'selected' : ''})) \"Terminal\")\r\n                                (option (@ (value \"tomorrow_night_bright\")\r\n                                           (selected ${this.state.theme === 'tomorrow_night_bright' ? 'selected' : ''})) \"Tomorrow Night Bright\")\r\n                                (option (@ (value \"chrome\")\r\n                                           (selected ${this.state.theme === 'chrome' ? 'selected' : ''})) \"Chrome\")\r\n                                (option (@ (value \"kuroir\")\r\n                                           (selected ${this.state.theme === 'kuroir' ? 'selected' : ''})) \"Kuroir\")\r\n                                (option (@ (value \"textmate\")\r\n                                           (selected ${this.state.theme === 'textmate' ? 'selected' : ''})) \"Textmate\") )\r\n                            (label (@ (for \"appSettingsDialog-theme\"))\r\n                                \"Theme\") )) )))\r\n            (div (@ (style (display \"flex\")\r\n                           (justifyContent \"center\") ))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn grey darken-3\")\r\n                           (onClick ${(ev) => this.handleCancelClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"cancel\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"Cancel\") )\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn blue darken-2\")\r\n                           (onClick ${(ev) => this.handleOkClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"check\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"OK\") ) ))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport const MenuItem = ({icon, caption, onClick}) => {\r\n    return (lsx`\r\n        (li (a (@ (onClick ${onClick}))\r\n            (i (@ (className \"material-icons\")) ${icon})\r\n            ${caption} ))`\r\n    );\r\n};\r\n\r\n\r\nexport const MenuDivider = () => {\r\n    return (lsx`(li (@ (className \"divider\") (tabIndex -1)))`);\r\n};\r\n\r\n\r\nexport const Switch = ({caption, offText, onText, elClass, checked, onClick}) => {\r\n    return (lsx`\r\n        (div (@ (className (\"switch\" ${elClass ? elClass : ''})))\r\n            (label ${caption})(br)\r\n            (label\r\n                ${offText}\r\n                (input (@ (type \"checkbox\")\r\n                          (checked ${checked})\r\n                          (onClick ${onClick}) ))\r\n                (span  (@ (className \"lever\")))\r\n                ${onText} ))`\r\n    );\r\n};\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { renderByMenneu } from './backend-api.js';\r\n\r\n\r\n\r\nconst start = (async (text, cf, data, srcPath, ...exportPath) => {\r\n    return await renderByMenneu(text, data, Object.assign({\r\n        inputFormat: 'md',\r\n        dataFormat: 'object',\r\n    }, cf || {}), srcPath, ...exportPath);\r\n});\r\n\r\nexport default start;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport const escapeHtml = (s) => s\r\n    .replace(/&/g, \"&amp;\")\r\n    .replace(/</g, \"&lt;\")\r\n    .replace(/>/g, \"&gt;\")\r\n    .replace(/\"/g, \"&quot;\")\r\n    .replace(/'/g, \"&#39;\");\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { loadFile,\r\n         pathJoin,\r\n         getDirName,\r\n         openURL,\r\n         openNewWindow } from '../backend-api.js';\r\nimport AppState          from '../appstate.js';\r\nimport { isPreviewable } from '../modes.js';\r\nimport { backend }       from '../remote.js';\r\n\r\n\r\n\r\nexport function getSuggests() {\r\n    return {\r\n        'new-window': null,\r\n        'open': null,\r\n        'open \"path/to/file/opening\"': null,\r\n        'save': null,\r\n        'saveas': null,\r\n        'saveas \"path/to/file/to/save/as\"': null,\r\n        'export': null,\r\n        'export \"path/to/file/to/export\"': null,\r\n        'preview': null,\r\n        'sync on': null,\r\n        'sync off': null,\r\n        'preview-format pdf': null,\r\n        'preview-format html': null,\r\n        'scripting on': null,\r\n        'scripting off': null,\r\n        'entire-text': null,\r\n        'selected-text': null,\r\n        'insert \"text\"': null,\r\n        '$resolve-pipe ($> ls -al) (<- insert) (-> () nil)': null,\r\n        '$> some-shell-cmd cmd-options': null,\r\n        'help': null,\r\n        'help topic-name': null,\r\n    };\r\n}\r\n\r\n\r\nexport function getOperators({app}) {\r\n    return ([\r\n        {\r\n            name: 'new-window',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...args) => {\r\n                openNewWindow();\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'open',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => async (filePath) => {\r\n                if (filePath) {\r\n                    const dirName = AppState.filePath ? await getDirName(AppState.filePath) : null;\r\n                    const fullPath = await pathJoin(dirName, filePath);\r\n                    const text = await loadFile(fullPath);\r\n                    app.fileDropDialogRef.current.openFile(fullPath, text);\r\n\r\n                    app.afterFileOpen();\r\n                    return '';\r\n                } else {\r\n                    app.handleFileOpenClick({});\r\n                    return '';\r\n                }\r\n            },\r\n        }, {\r\n            name: 'save',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...args) => {\r\n                app.handleSaveClick({});\r\n                return 'Saving...';\r\n            },\r\n        }, {\r\n            name: 'saveas',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => async (filePath) => {\r\n                if (filePath) {\r\n                    const dirName = AppState.filePath ? await getDirName(AppState.filePath) : null;\r\n                    await app.fileSaveAs(dirName, filePath);\r\n                    return 'Saved.';\r\n                } else {\r\n                    app.handleSaveAsClick({});\r\n                    return '';\r\n                }\r\n            },\r\n        }, {\r\n            name: 'export',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => async (filePath) => {\r\n                if (! isPreviewable(AppState.inputFormat)) {\r\n                    throw new Error(`Exporting of ${AppState.inputFormat} format is not supported.`);\r\n                }\r\n                if (filePath) {\r\n                    const dirName = AppState.filePath ? await getDirName(AppState.filePath) : null;\r\n                    await app.fileExport(dirName, filePath);\r\n                    return 'Exported.';\r\n                } else {\r\n                    app.handleExportClick({});\r\n                    return '';\r\n                }\r\n            },\r\n        }, {\r\n            name: 'preview',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...args) => {\r\n                app.handleShowClick({});\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'sync',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (onoff) => {\r\n                app.setState({syncPreview: onoff === 'on' || onoff === true});\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'preview-format',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (format) => {\r\n                app.setState({isPdf: format === 'pdf'});\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'scripting',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (onoff) => {\r\n                app.setState({useScripting: onoff === 'on' || onoff === true});\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'entire-text',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (text) => {\r\n                return app.getEntireText(text);\r\n            },\r\n        }, {\r\n            name: 'selected-text',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (text) => {\r\n                return app.getSelectedText(text);\r\n            },\r\n        }, {\r\n            name: 'insert',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (text) => {\r\n                return app.insertText(text);\r\n            },\r\n        }, {\r\n            name: '$>',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...commands) => {\r\n                return backend().runCommandAST([[{'symbol': '$>'}, commands.join(' ')]]);\r\n            },\r\n        }, {\r\n            name: 'help',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (topic) => {\r\n                openURL('https://github.com/shellyln/mdne');\r\n                return '';\r\n            },\r\n        }\r\n    ]);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport AppState,\r\n       { updateAppIndicatorBar } from '../appstate.js';\r\nimport { getAceEditorMode }      from '../modes.js';\r\n\r\n\r\n\r\n/**\r\n * @return {string}\r\n */\r\nexport function getSuggests() {\r\n    return {\r\n        'mode md': null,\r\n        'mode html': null,\r\n        'mode lisp': null,\r\n        'mode tex': null,\r\n        'mode latex': null,\r\n        'mode css': null,\r\n        'mode less': null,\r\n        'mode sass': null,\r\n        'mode scss': null,\r\n        'mode json': null,\r\n        'mode json5': null,\r\n        'mode js': null,\r\n        'mode jsx': null,\r\n        'mode ts': null,\r\n        'mode tsx': null,\r\n        'mode svg': null,\r\n        'mode xml': null,\r\n        'mode yaml': null,\r\n        'mode toml': null,\r\n        'mode ini': null,\r\n        'mode graphql': null,\r\n        'mode protobuf': null,\r\n        'mode sql': null,\r\n        'mode csharp': null,\r\n        'mode golang': null,\r\n        'mode ruby': null,\r\n        'mode rust': null,\r\n        'mode python': null,\r\n        'mode java': null,\r\n        'mode kotlin': null,\r\n        'mode r': null,\r\n        'mode sh': null,\r\n        'mode dockerfile': null,\r\n        'mode makefile': null,\r\n        'mode text': null,\r\n    };\r\n}\r\n\r\n\r\nexport function getOperators({getCurrentAceId}) {\r\n    return ([\r\n        {\r\n            name: 'mode',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (modeName) => {\r\n                if (!modeName) {\r\n                    throw new Error('Editor mode name is not specified.');\r\n                }\r\n                AppState.inputFormat = modeName;\r\n                const aceMode = getAceEditorMode(modeName);\r\n                if (aceMode) {\r\n                    const editor = AppState.AceEditor[getCurrentAceId()];\r\n                    editor.session.setMode(aceMode);\r\n\r\n                    updateAppIndicatorBar();\r\n                    AppState.invalidate();\r\n\r\n                    return '';\r\n                } else {\r\n                    throw new Error('Invalid editor mode name: ' + modeName);\r\n                }\r\n            },\r\n        }\r\n    ]);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport AppState from '../appstate.js';\r\n\r\n\r\n\r\nexport function getSuggests() {\r\n    return {\r\n        'md table rows cols': null,\r\n        'md list rows': null,\r\n        'md o-list rows': null,\r\n        'md checkbox rows': null,\r\n        'md blockquote': null,\r\n        'md link': null,\r\n        'md image': null,\r\n        'md toc': null,\r\n        'md hr': null,\r\n        'md math': null,\r\n        'md inline-math': null,\r\n        'md mathjax': null,\r\n        'md code': null,\r\n        'md inline-code': null,\r\n        'md uml': null,\r\n        'md emoji': null,\r\n        'md italic': null,\r\n        'md italic-alt': null,\r\n        'md bold': null,\r\n        'md bold-alt': null,\r\n        'md strikethru': null,\r\n        'md mark': null,\r\n        'md ins': null,\r\n        'md footnote': null,\r\n        'md inline-footnote': null,\r\n        'md deflist': null,\r\n        'md lazy-deflist': null,\r\n        'md abbr': null,\r\n        'md pagebreak': null,\r\n        'md h1': null,\r\n        'md h1-no-toc': null,\r\n        'md h2': null,\r\n        'md h2-no-toc': null,\r\n        'md h3': null,\r\n        'md h4': null,\r\n        'md h5': null,\r\n        'md h6': null,\r\n        'md style': null,\r\n        'md comment': null,\r\n        'md char-entity-ref': null,\r\n        'md escape': null,\r\n        'md embedded-image': null,\r\n        'md embedded-uml': null,\r\n        'md embedded-style': null,\r\n        'md svg': null,\r\n        'md canvas': null,\r\n        'md line': null,\r\n        'md rect': null,\r\n        'md roundrect': null,\r\n        'md qr': null,\r\n        'md code128': null,\r\n        'md code39': null,\r\n        'md gtin13': null,\r\n        'md gtin8': null,\r\n        'md print-preview': null,\r\n        'md html5': null,\r\n    };\r\n}\r\n\r\n\r\nexport function getOperators({getCurrentAceId}) {\r\n    return ([\r\n        {\r\n            name: 'md',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...args) => {\r\n                switch (args[0]) {\r\n                case 'table':\r\n                    {\r\n                        const rows = Math.max(1, Number(args[1] || 3));\r\n                        const cols = Math.max(1, Number(args[2] || 3));\r\n                        let s = `\\n|${Array(cols).fill('').map((_, i) => `R_C${i}`).join('|')}|\\n|${\r\n                                    // eslint-disable-next-line no-unused-vars\r\n                                    Array(cols).fill('').map((_, i) => '----').join('|')}|\\n`;\r\n                        for (let r = 0; r < rows; r++) {\r\n                            s += `|${Array(cols).fill('').map((_, i) => `R${r}C${i}`).join('|')}|\\n`;\r\n                        }\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), s);\r\n                    }\r\n                    return '';\r\n                case 'list':\r\n                    {\r\n                        const rows = Math.max(1, Number(args[1] || 3));\r\n                        let s = '\\n';\r\n                        for (let r = 0; r < rows; r++) {\r\n                            s += `* item ${r}\\n`;\r\n                        }\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), s);\r\n                    }\r\n                    return '';\r\n                case 'o-list':\r\n                    {\r\n                        const rows = Math.max(1, Number(args[1] || 3));\r\n                        let s = '\\n';\r\n                        for (let r = 0; r < rows; r++) {\r\n                            s += `1. item ${r}\\n`;\r\n                        }\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), s);\r\n                    }\r\n                    return '';\r\n                case 'checkbox':\r\n                    {\r\n                        const rows = Math.max(1, Number(args[1] || 3));\r\n                        let s = '\\n';\r\n                        for (let r = 0; r < rows; r++) {\r\n                            s += `* [${r % 2 === 0 ? 'X' : ' '}] item ${r}\\n`;\r\n                        }\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), s);\r\n                    }\r\n                    return '';\r\n                case 'blockquote': case 'quote':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n> This is blockquote.\\n>> This is blockquote.\\n');\r\n                    }\r\n                    return '';\r\n                case 'link':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n[This is inline-style link with title](https://github.com/shellyln/mdne \"mdne\")\\n');\r\n                    }\r\n                    return '';\r\n                case 'image':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n![alt text](https://shellyln.github.io/assets/image/mdne-logo.svg \"Logo\" =300x100)\\n');\r\n                    }\r\n                    return '';\r\n                case 'toc':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n[[TOC]]\\n');\r\n                    }\r\n                    return '';\r\n                case 'hr':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n----\\n');\r\n                    }\r\n                    return '';\r\n                case 'math':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n$$$\\nsum_(i=1)^n i^3=((n(n+1))/2)^2\\n$$$\\n');\r\n                    }\r\n                    return '';\r\n                case 'inline-math':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' $$sum_(i=1)^n i^3=((n(n+1))/2)^2$$ ');\r\n                    }\r\n                    return '';\r\n                case 'mathjax':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"' +\r\n                            ' crossorigin=\"anonymous\"></script>\\n');\r\n                    }\r\n                    return '';\r\n                case 'code':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n```javascript\\n\\nconst x = 0;\\n\\n```\\n');\r\n                    }\r\n                    return '';\r\n                case 'inline-code':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' `const x = 0` ');\r\n                    }\r\n                    return '';\r\n                case 'uml':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n@startuml\\n' +\r\n                            'Alice -> Bob: Authentication Request\\n' +\r\n                            'Bob --> Alice: Authentication Response\\n\\n' +\r\n                            'Alice -> Bob: Another authentication Request\\n' +\r\n                            'Alice <-- Bob: Another authentication Response\\n' +\r\n                            '@enduml\\n');\r\n                    }\r\n                    return '';\r\n                case 'emoji':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            ' :wink: :crush: :cry: :tear: :laughing: :yum: ');\r\n                    }\r\n                    return '';\r\n                case 'italic':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' *This is italic* ');\r\n                    }\r\n                    return '';\r\n                case 'italic-alt':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' _This is italic_ ');\r\n                    }\r\n                    return '';\r\n                case 'bold':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' **This is bold** ');\r\n                    }\r\n                    return '';\r\n                case 'bold-alt':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' __This is bold__ ');\r\n                    }\r\n                    return '';\r\n                case 'strikethrough': case 'strikethru':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' ~~This is strikethrough~~ ');\r\n                    }\r\n                    return '';\r\n                case 'mark':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' ==This is mark== ');\r\n                    }\r\n                    return '';\r\n                case 'ins':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' ++This is ins++ ');\r\n                    }\r\n                    return '';\r\n                case 'footnote':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nThis is footnote 1 link[^first].\\n[^first]: Footnote text.\\n');\r\n                    }\r\n                    return '';\r\n                case 'inline-footnote':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nThis is inline footnote^[Text of inline footnote.].\\n');\r\n                    }\r\n                    return '';\r\n                case 'deflist':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nTerm 1\\n    ~ Definition 1a\\n    ~ Definition 1b\\n');\r\n                    }\r\n                    return '';\r\n                case 'lazy-deflist':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nTerm 1\\n:   Definition 1a\\nwith lazy continuation.\\n\\n' +\r\n                            '    paragraph 1\\n\\n        { code block }\\n    paragraph 3\\n' +\r\n                            ':   Definition 1b\\n\\n');\r\n                    }\r\n                    return '';\r\n                case 'abbr':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nThis is HTML abbreviation example.\\n*[HTML]: Hyper Text Markup Language\\n');\r\n                    }\r\n                    return '';\r\n                case 'pagebreak':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<div style=\"page-break-before:always\"></div>\\n');\r\n                    }\r\n                    return '';\r\n                case 'h1':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n# This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h1-no-toc':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<p style=\"font-size: 2em; font-weight: bold; ' +\r\n                            'border-bottom: 1px solid #eaecef; padding-bottom: .3em;\">' +\r\n                            'This is a header.</p>\\n');\r\n                    }\r\n                    return '';\r\n                case 'h2':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n## This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h2-no-toc':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<p style=\"font-size: 1.5em; font-weight: bold; ' +\r\n                            'border-bottom: 1px solid #eaecef; padding-bottom: .3em;\">' +\r\n                            'This is a header.</p>\\n');\r\n                    }\r\n                    return '';\r\n                case 'h3':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n### This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h4':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n#### This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h5':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n##### This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h6':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n###### This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'style':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<style>h4 { background-color: cyan; }</style>\\n');\r\n                    }\r\n                    return '';\r\n                case 'comment':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n<!-- This is a comment. -->\\n');\r\n                    }\r\n                    return '';\r\n                case 'char-entity-ref':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n&amp;&lt;&gt;&quot;&apos;&nbsp;\\n' +\r\n                            '&sup3;&frac34;&plusmn;&times;&divide;&para;&sect;&middot;&laquo;&raquo;\\n' +\r\n                            '&copy;&reg;&trade;&yen;&euro;$&curren;&pound;&cent;\\n');\r\n                    }\r\n                    return '';\r\n                case 'escape':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n\\\\<style>h5 { background-color: cyan; }\\\\</style>\\n');\r\n                    }\r\n                    return '';\r\n                case 'embedded-image':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n%%%(Image(@(src\"https://shellyln.github.io/assets/image/mdne-logo.svg\")(width 300)(height 100)(unit \"px\")(alt \"Logo\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'embedded-uml':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n%%%(PlantUml \"\"\"\\n' +\r\n                            'Alice -> Bob: Authentication Request\\n' +\r\n                            'Bob --> Alice: Authentication Response\\n\\n' +\r\n                            'Alice -> Bob: Another authentication Request\\n' +\r\n                            'Alice <-- Bob: Another authentication Response\\n' +\r\n                            '\"\"\")\\n');\r\n                    }\r\n                    return '';\r\n                case 'embedded-style':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n%%%(Style(@(src\"https://shellyln.github.io/menneu/assets/style/playground.css\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'svg':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n%%%(Svg (@ (width 100)(height 100)(unit \"mm\"))\\n\\n)\\n');\r\n                    }\r\n                    return '';\r\n                case 'canvas':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Canvas (-> (ctx) (::ctx@moveTo  10  10)\\n' +\r\n                            '                  (::ctx@lineTo 190 190)\\n' +\r\n                            '                  (::ctx:strokeStyle=\"rgba(255,128,0,0.2)\")\\n' +\r\n                            '                  (::ctx@stroke)\\n' +\r\n                            '                  (::ctx@beginPath) ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'line':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n(Line (@(x 0)(y 0)(lineWidth 1)(stroke)(strokeColor \"blue\")' +\r\n                            '(points ($list 10 10 20 40 30 90 ))))\\n');\r\n                    }\r\n                    return '';\r\n                case 'rect':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n(Rect(@(x 5)(y 5)(width 70)(height 20)(lineWidth 3)' +\r\n                            '(stroke)(strokeColor \"blue\")(fill)(fillColor \"darkblue\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'roundrect':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n(RoundRect(@(x 5)(y 5)(width 70)(height 20)(lineWidth 3)(r 3)' +\r\n                            '(stroke)(strokeColor \"blue\")(fill)(fillColor \"darkblue\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'qr':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n(Qr (@ (x 5)(y 7)(cellSize 0.8)(fill)(fillColor \"darkblue\")(data \"Hello\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'code128':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Code128 (@ (x 5)(y 7)(elementWidth 0.66)(height 15)(quietHeight 0)(textHeight 7)\\n' +\r\n                            '            (font \"7px \\'OCRB\\'\")(fill)(fillColor \"darkblue\")(data \"Hello\") ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'code39':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Code39 (@ (x 5)(y 7)(narrowWidth 0.66)(wideWidth 1.32)(height 15)(quietHeight 0)(textHeight 7)\\n' +\r\n                            '           (font \"7px \\'OCRB\\'\")(fill)(fillColor \"darkblue\")(data \"HELLO\") ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'gtin13':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Gtin13 (@ (x 5)(y 7)(elementWidth 0.66)(height 15)(quietHeight 0)(textHeight 7)\\n' +\r\n                            '           (font \"7px \\'OCRB\\'\")(fill)(fillColor \"darkblue\")(data \"123456789012\") ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'gtin8':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Gtin8 (@ (x 5)(y 7)(elementWidth 0.66)(height 15)(quietHeight 0)(textHeight 7)\\n' +\r\n                            '          (font \"7px \\'OCRB\\'\")(fill)(fillColor \"darkblue\")(data \"1234567\") ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'print-preview':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '<script>window.print()</script>');\r\n                    }\r\n                    return '';\r\n                case 'html5':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '(Html5\\n' +\r\n                            '(head (title \"Untitled\")\\n' +\r\n                            '      (meta (@ (charset \"UTF-8\")))\\n' +\r\n                            '      (NormalizeCss)\\n' +\r\n                            '      (PaperCss)\\n' +\r\n                            '\\n' +\r\n                            '    (style (@ (dangerouslySetInnerHTML \"\"\"$concat\\n' +\r\n                            '        /* You can write additional styles here. */\\n' +\r\n                            '        /*\\n' +\r\n                            '        body {\\n' +\r\n                            '            background-color: blue;\\n' +\r\n                            '        }\\n' +\r\n                            '        */\\n' +\r\n                            '    \"\"\") )))\\n' +\r\n                            '\\n' +\r\n                            '(body (@ (class \"A4\"))\\n' +\r\n                            '    (section (@ (class \"sheet padding-10mm\"))\\n' +\r\n                            '        Hello!\\n' +\r\n                            '        )))\\n');\r\n                    }\r\n                    return '';\r\n                default:\r\n                    return '';\r\n                }\r\n            },\r\n        }\r\n    ]);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { resourceBaseDirectory,\r\n         nativeConfirmSync,\r\n         saveFileAs,\r\n         getStartupFile,\r\n         openURL,\r\n         openNewWindow }         from '../libs/backend-api.js';\r\nimport { notifyEditorDirty,\r\n         alertWrap,\r\n         confirmWrap }           from '../libs/backend-wrap.js';\r\nimport AppState,\r\n       { updateAppIndicatorBar } from '../libs/appstate.js';\r\nimport start                     from '../libs/start.js';\r\nimport { getInputFormat,\r\n         isPreviewable,\r\n         getAceEditorMode }      from '../libs/modes.js';\r\nimport { escapeHtml }            from '../libs/escape.js';\r\nimport commandRunner             from '../libs/cmdrunner.js';\r\nimport { saveAsFilter,\r\n         exportFilter }          from '../libs/filefilters';\r\n\r\nimport { getSuggests as getAppSuggests,\r\n         getOperators as getAppOperators }  from '../libs/commands/app.js';\r\nimport { getSuggests as getModeSuggests,\r\n         getOperators as getModeOperators } from '../libs/commands/mode.js';\r\nimport { getSuggests as getMdSuggests,\r\n         getOperators as getMdOperators }   from '../libs/commands/md.js';\r\n\r\n\r\n\r\nconst LOCAL_STORAGE_KEY = '_mdne_app_settings__Xlnuf3Ao';\r\nconst LOCAL_STORAGE_VERSION = 2;\r\nconst LOCAL_STORAGE_INITIAL = JSON.stringify({\r\n    version: LOCAL_STORAGE_VERSION,\r\n    editor: {},\r\n    renderer: {},\r\n    app: {},\r\n});\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.stretched = true;\r\n        this.state.syncPreview = false;\r\n        this.state.isPdf = false;\r\n        this.state.useScripting = false;\r\n        this.state.currentAceId = 'editor';\r\n        this.state.splitterMoving = false;\r\n        this.state.darkThemePreview = false;\r\n        this.state.counter = 0;\r\n\r\n        this.aceFontSize = 14;\r\n        this.scheduleRerenderPreview = false;\r\n        this.savedEditorStyleWidth = null;\r\n        this.savedPreviewScrollY = 0;\r\n\r\n        this.commandBoxRef = React.createRef();\r\n        this.editorRef = React.createRef();\r\n        this.editorPlaceholderRef = React.createRef();\r\n        this.splitterRef = React.createRef();\r\n        this.rootRef = React.createRef();\r\n        this.fileDropDialogRef = React.createRef();\r\n        this.fileOpenDialogRef = React.createRef();\r\n        this.fileSaveDialogRef = React.createRef();\r\n        this.settingsDialogRef = React.createRef();\r\n\r\n        AppState.invalidate = () => this.setState({counter: this.state.counter + 1});\r\n\r\n        window.onbeforeunload = (ev) => {\r\n            // TODO: check all Ace editors\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            const isClean = editor.session.getUndoManager().isClean();\r\n            if (! isClean) {\r\n                if (nativeConfirmSync) {\r\n                    // NOTE: do not show prompt here on electron environment.\r\n                } else {\r\n                    ev.preventDefault(); \r\n                    return '';\r\n                }\r\n            }\r\n            return void 0;\r\n        }\r\n\r\n        commandRunner.install(config => {\r\n            const getCurrentAceId = () => this.state.currentAceId;\r\n            const operators = [\r\n                ...getAppOperators({app: this}),\r\n                ...getModeOperators({getCurrentAceId}),\r\n                ...getMdOperators({getCurrentAceId}),\r\n            ];\r\n            config.funcs = (config.funcs || []).concat(operators);\r\n            // config.macros = (config.macros || []).concat(macros);\r\n            // config.symbols = (config.symbols || []).concat(symbols);\r\n            return config;\r\n        });\r\n        // commandRunner.setGlobals({});\r\n\r\n        {\r\n            const appSettings = this.getAppSettings();\r\n            this.state.darkThemePreview = appSettings.renderer?.darkThemePreview ?? false;\r\n            AppState.skipDropDialog = appSettings.app?.skipDropDialog ?? false;\r\n        }\r\n\r\n        {\r\n            const ua = window.navigator.userAgent;\r\n            // NOTE: Chromium Edge treats as Chrome.\r\n            this.isChrome =\r\n                ua.match(' Chrome/') &&\r\n                !ua.match(' CriOS/') &&\r\n                !ua.match(' OPR/') &&\r\n                !ua.match(' Presto/') &&\r\n                !ua.match(' Vivaldi/') &&\r\n                !ua.match(' Iron Safari/') &&\r\n                !ua.match(' Sleipnir/') &&\r\n                !ua.match(' Mobile Safari/');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        {\r\n            const elems = document.querySelectorAll('.dropdown-trigger');\r\n            /* const instances = */ M.Dropdown.init(elems, {\r\n                constrainWidth: false,\r\n            });\r\n        }\r\n        {\r\n            const elems = document.querySelectorAll('.tooltipped');\r\n            /* const instances = */ M.Tooltip.init(elems, {});\r\n        }\r\n        {\r\n            const elems = document.querySelectorAll('select');\r\n            /* const instances = */ M.FormSelect.init(elems, {});\r\n        }\r\n        {\r\n            const elems = document.querySelectorAll('.command-box-input.autocomplete');\r\n            /* const instances = */ M.Autocomplete.init(elems, {\r\n                data: Object.assign(\r\n                    getAppSuggests(),\r\n                    getModeSuggests(),\r\n                    getMdSuggests(),\r\n                ),\r\n            });\r\n        }\r\n        if (window.dialogPolyfill) {\r\n            // initialize polyfill emulated elements\r\n            const dialogs = document.querySelectorAll('dialog');\r\n            for (let i = 0; i < dialogs.length; i++) {\r\n                const dialog = dialogs[i];\r\n                dialogPolyfill.registerDialog(dialog);\r\n            }\r\n        }\r\n\r\n        {\r\n            const appSettings = this.getAppSettings();\r\n            ace.config.loadModule('ace/ext/language_tools', () => {\r\n                const editor = AppState.AceEditor[this.state.currentAceId];\r\n                editor.setOptions({...JSON.parse(LOCAL_STORAGE_INITIAL).editor, ...appSettings.editor ?? {}});\r\n            });\r\n        }\r\n\r\n        document.onkeyup = (ev) => {\r\n            if (ev.ctrlKey && ev.shiftKey && ev.keyCode === 79) {\r\n                // Ctrl+Shift+O\r\n                this.commandBoxRef.current.focus();\r\n            }\r\n        };\r\n\r\n        const setEditorNewFile = () => {\r\n            AppState.inputFormat = 'md';\r\n            notifyEditorDirty(false);\r\n\r\n            updateAppIndicatorBar();\r\n\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.clearSelection();\r\n            editor.session.setMode(getAceEditorMode(AppState.inputFormat));\r\n            editor.setValue('');\r\n            editor.clearSelection();\r\n            editor.session.getUndoManager().markClean();\r\n\r\n            this.setState({counter: this.state.counter + 1});\r\n        };\r\n\r\n        getStartupFile()\r\n        .then(file => {\r\n            if (file) {\r\n                AppState.filePath = file.path;\r\n                AppState.inputFormat = getInputFormat(AppState.filePath);\r\n                notifyEditorDirty(false);\r\n    \r\n                updateAppIndicatorBar();\r\n    \r\n                const editor = AppState.AceEditor[this.state.currentAceId];\r\n                editor.clearSelection();\r\n                editor.session.setMode(getAceEditorMode(AppState.inputFormat));\r\n                editor.setValue(file.text);\r\n                editor.clearSelection();\r\n                editor.session.getUndoManager().markClean();\r\n                editor.moveCursorTo(0, 0);\r\n\r\n                this.setState({counter: this.state.counter + 1});\r\n            } else {\r\n                setEditorNewFile();\r\n                if (! AppState.skipDropDialog) {\r\n                    this.openFileOpenDialog();\r\n                }\r\n            }\r\n        })\r\n        // eslint-disable-next-line no-unused-vars\r\n        .catch(e => {\r\n            setEditorNewFile();\r\n            if (! AppState.skipDropDialog) {\r\n                this.openFileOpenDialog();\r\n            }\r\n        });\r\n    }\r\n\r\n    getAppSettings() {\r\n        return JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY) || LOCAL_STORAGE_INITIAL);\r\n    }\r\n\r\n    saveAppSettings(settings) {\r\n        window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(settings));\r\n        return settings;\r\n    }\r\n\r\n    afterFileOpen() {\r\n        this.rootRef.current.contentWindow.location.replace(`${resourceBaseDirectory}empty.html`);\r\n\r\n        this.setState({stretched: true});\r\n        this.savedEditorStyleWidth = null;\r\n        this.savedPreviewScrollY = 0;\r\n        this.editorRef.current.outerWrapRef.current.style.width = null;\r\n        this.editorPlaceholderRef.current.style.width = null;\r\n\r\n        document.activeElement.blur();\r\n\r\n        setTimeout(() => {\r\n            // adjust wrapping and horizontal scroll bar\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.resize(true);\r\n        }, 30);\r\n    }\r\n\r\n    openFileOpenDialog() {\r\n        this.fileDropDialogRef.current.showModal({\r\n            aceId: this.state.currentAceId,\r\n            fileOpenDialog: this.fileOpenDialogRef.current,\r\n        }, () => this.afterFileOpen());\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    async handleFileOpenClick(ev) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        const isClean = editor.session.getUndoManager().isClean();\r\n        if (! isClean) {\r\n            if (! await confirmWrap('Changes you made may not be saved.\\nAre you sure want to discard changes?')) {\r\n                return;\r\n            }\r\n        }\r\n        this.openFileOpenDialog();\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleStretchedClick(ev) {\r\n        this.setState({stretched: !this.state.stretched});\r\n        if (this.state.stretched) {\r\n            // collapsed\r\n            this.editorRef.current.outerWrapRef.current.style.width = this.savedEditorStyleWidth;\r\n            this.editorPlaceholderRef.current.style.width = this.savedEditorStyleWidth;\r\n            setTimeout(() => this.rootRef.current.contentWindow.scrollTo(\r\n                this.rootRef.current.contentWindow.scrollX,\r\n                this.savedPreviewScrollY,\r\n            ), 30);\r\n        } else {\r\n            // stretched\r\n            try {\r\n                this.savedEditorStyleWidth = this.editorRef.current.outerWrapRef.current.style.width;\r\n                this.savedPreviewScrollY = this.rootRef.current.contentWindow.scrollY;\r\n            } catch (e) {\r\n                // NOTE: ignore errors\r\n            }\r\n            this.editorRef.current.outerWrapRef.current.style.width = null;\r\n            this.editorPlaceholderRef.current.style.width = null;\r\n        }\r\n        document.activeElement.blur();\r\n\r\n        setTimeout(() => {\r\n            // adjust wrapping and horizontal scroll bar\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.resize(true);\r\n        }, 30);\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleSyncPreviewClick(ev) {\r\n        this.setState({syncPreview: !this.state.syncPreview});\r\n        document.activeElement.blur();\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleIsPdfClick(ev) {\r\n        this.setState({isPdf: !this.state.isPdf});\r\n        document.activeElement.blur();\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleUseScriptingClick(ev) {\r\n        this.setState({useScripting: !this.state.useScripting});\r\n        document.activeElement.blur();\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleShowClick(ev) {\r\n        if (this.state.stretched) {\r\n            this.editorRef.current.outerWrapRef.current.style.width = this.savedEditorStyleWidth;\r\n            this.editorPlaceholderRef.current.style.width = this.savedEditorStyleWidth;\r\n        }\r\n\r\n        if (this.state.isPdf &&\r\n            (window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER ||\r\n             window._MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN)) {\r\n            // do nothing\r\n        } else {\r\n            this.setState({stretched: false});\r\n        }\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n\r\n        if (! isPreviewable(AppState.inputFormat)) {\r\n            // eslint-disable-next-line no-console\r\n            console.error(`Preview of ${AppState.inputFormat} format is not supported.`);\r\n            this.rootRef.current.contentWindow.location.replace(`${resourceBaseDirectory}error.html`);\r\n        } else {\r\n            if (this.state.isPdf) {\r\n                start(editor.getValue(), {\r\n                    inputFormat: AppState.inputFormat,\r\n                    outputFormat: 'pdf',\r\n                    rawInput:\r\n                        (AppState.inputFormat !== 'md' &&\r\n                        AppState.inputFormat !== 'html') ||\r\n                            this.state.useScripting ? false : true,\r\n                }, null, AppState.filePath)\r\n                .then(outputUrl => {\r\n                    this.rootRef.current.contentWindow.location.replace(outputUrl);\r\n                })\r\n                .catch(async (e) => {\r\n                    // eslint-disable-next-line no-console\r\n                    console.error(e);\r\n                    this.rootRef.current.contentWindow.location.replace(`${resourceBaseDirectory}error.html`);\r\n                });\r\n            } else {\r\n                start(editor.getValue(), {\r\n                    inputFormat: AppState.inputFormat,\r\n                    outputFormat: 'html',\r\n                    rawInput:\r\n                        (AppState.inputFormat !== 'md' &&\r\n                        AppState.inputFormat !== 'html') ||\r\n                            this.state.useScripting ? false : true,\r\n                    darkTheme: this.state.darkThemePreview ? true : false,\r\n                }, null, AppState.filePath)\r\n                .then(outputUrl => {\r\n                    this.rootRef.current.contentWindow.location.replace(outputUrl);\r\n                    setTimeout(() => this.rootRef.current.contentWindow.scrollTo(\r\n                        this.rootRef.current.contentWindow.scrollX,\r\n                        Math.min(\r\n                            this.savedPreviewScrollY,\r\n                            this.rootRef.current.contentWindow.document.documentElement?.scrollHeight\r\n                                ?? this.savedPreviewScrollY,\r\n                        ),\r\n                    ), 30);\r\n                })\r\n                .catch(async (e) => {\r\n                    // eslint-disable-next-line no-console\r\n                    console.error(e);\r\n                    this.rootRef.current.contentWindow.location.replace(`${resourceBaseDirectory}error.html`);\r\n                });\r\n            }\r\n\r\n            setTimeout(() => {\r\n                // adjust wrapping and horizontal scroll bar\r\n                const editor = AppState.AceEditor[this.state.currentAceId];\r\n                editor.resize(true);\r\n            }, 30);\r\n        }\r\n        document.activeElement.blur();\r\n    }\r\n\r\n    handleSaveClick(ev) {\r\n        if (AppState.filePath) {\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.execCommand('save');\r\n        } else {\r\n            this.handleSaveAsClick(ev);\r\n        }\r\n    }\r\n\r\n    async fileSaveAs(currentDir, fileName) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n\r\n        const fileInfo = await saveFileAs(editor.getValue(), currentDir, fileName);\r\n        // eslint-disable-next-line require-atomic-updates\r\n        AppState.filePath = fileInfo.path;\r\n        // eslint-disable-next-line require-atomic-updates\r\n        AppState.inputFormat = getInputFormat(AppState.filePath);\r\n\r\n        editor.session.setMode(getAceEditorMode(AppState.inputFormat));\r\n        editor.session.getUndoManager().markClean();\r\n        notifyEditorDirty(false);\r\n        updateAppIndicatorBar();\r\n\r\n        this.setState({counter: this.state.counter + 1});\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleSaveAsClick(ev) {\r\n        this.fileSaveDialogRef.current.showModal({\r\n            title: 'Save as',\r\n            currentAceId: this.state.currentAceId,\r\n            currentFilePath: AppState.filePath,\r\n            forExport: false,\r\n            fileTypes: saveAsFilter,\r\n            intent: 'saveas',\r\n        }, async (currentDir, fileName) => {\r\n            try {\r\n                await this.fileSaveAs(currentDir, fileName);\r\n            } catch (e) {\r\n                await alertWrap(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async fileExport(currentDir, fileName) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n\r\n        const ext = fileName.lastIndexOf('.') >= 0 ?\r\n            fileName.toLowerCase().slice(fileName.lastIndexOf('.')) : '';\r\n        await start(editor.getValue(), {\r\n            inputFormat: AppState.inputFormat,\r\n            outputFormat: ext === '.pdf' ? 'pdf' : 'html',\r\n            rawInput:\r\n                (AppState.inputFormat !== 'md' &&\r\n                 AppState.inputFormat !== 'html') ||\r\n                    this.state.useScripting ? false : true,\r\n        }, null, AppState.filePath, currentDir, fileName);\r\n    }\r\n\r\n    getEntireText() {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        return editor.getValue();\r\n    }\r\n\r\n    getSelectedText() {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        return editor.getSelectedText();\r\n    }\r\n\r\n    insertText(text) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        editor.session.insert(editor.getCursorPosition(), text);\r\n        return text;\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    async handleExportClick(ev) {\r\n        if (! isPreviewable(AppState.inputFormat)) {\r\n            await alertWrap(`Preview of ${AppState.inputFormat} format is not supported.`);\r\n        } else {\r\n            this.fileSaveDialogRef.current.showModal({\r\n                title: 'Export',\r\n                currentAceId: this.state.currentAceId,\r\n                currentFilePath: AppState.filePath,\r\n                forExport: true,\r\n                fileTypes: exportFilter,\r\n                intent: 'export',\r\n            }, async (currentDir, fileName) => {\r\n                try {\r\n                    await this.fileExport(currentDir, fileName);\r\n                } catch (e) {\r\n                    await alertWrap(e);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleSettingsClick(ev) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        const appSettings = this.getAppSettings();\r\n\r\n        this.settingsDialogRef.current.showModal(\r\n            {\r\n                editor: editor.getOptions(),\r\n                renderer: appSettings.renderer ?? {},\r\n                app: appSettings.app ?? {},\r\n            },\r\n            (settings) => {\r\n                settings.version = LOCAL_STORAGE_VERSION;\r\n                editor.setOptions(settings.editor);\r\n                this.saveAppSettings(settings);\r\n                this.setState({\r\n                    darkThemePreview: settings.renderer?.darkThemePreview ?? false,\r\n                });\r\n                AppState.skipDropDialog = settings.app?.skipDropDialog;\r\n            },\r\n        );\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleAceEditorOnChange(o) {\r\n        if (! AppState.fileChanged) {\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            if (!(editor.curOp && editor.curOp.command.name)) {\r\n                return;\r\n            }\r\n            notifyEditorDirty(true);\r\n            updateAppIndicatorBar();\r\n            // NOTE: Don't update state!\r\n        }\r\n\r\n        if (!this.state.stretched && this.state.syncPreview && !this.state.isPdf) {\r\n            if (! isPreviewable(AppState.inputFormat)) {\r\n                return;\r\n            }\r\n            if (!this.scheduleRerenderPreview) {\r\n                this.scheduleRerenderPreview = true;\r\n                setTimeout(() => {\r\n                    const editor = AppState.AceEditor[this.state.currentAceId];\r\n\r\n                    start(editor.getValue(), {\r\n                        inputFormat: AppState.inputFormat,\r\n                        outputFormat: 'html',\r\n                        rawInput:\r\n                            (AppState.inputFormat !== 'md' &&\r\n                             AppState.inputFormat !== 'html') ||\r\n                                this.state.useScripting ? false : true,\r\n                        darkTheme: this.state.darkThemePreview ? true : false,\r\n                    }, null, AppState.filePath)\r\n                    .then(outputUrl => {\r\n                        if (outputUrl.startsWith('data:') || outputUrl.startsWith('blob:')) {\r\n                            // emulation\r\n                            this.rootRef.current.contentWindow.location.replace(outputUrl);\r\n                        } else {\r\n                            // carlo\r\n                            this.rootRef.current.contentWindow.location.reload(true);\r\n                        }\r\n                        this.scheduleRerenderPreview = false;\r\n                    })\r\n                    .catch(e => {\r\n                        this.scheduleRerenderPreview = false;\r\n                        // eslint-disable-next-line no-console\r\n                        console.error(e);\r\n                    });\r\n                }, 3000);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleAceEditorOnChangeScrollTop(y, totalHeight) {\r\n        if (!this.state.stretched && !this.state.isPdf) {\r\n            try {\r\n                const w = y / totalHeight;\r\n                const scrollY = this.rootRef.current.contentWindow.document.documentElement.scrollHeight * w;\r\n                this.rootRef.current.contentWindow.scrollTo(\r\n                    this.rootRef.current.contentWindow.scrollX,\r\n                    scrollY,\r\n                );\r\n                this.savedPreviewScrollY = scrollY;\r\n            } catch (e) {\r\n                // emulation\r\n            }\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleAceEditorOnChangeScrollLeft(x) {\r\n        // if (!this.state.stretched && !this.state.isPdf) {\r\n        //     this.rootRef.current.contentWindow.scrollTo(x, this.rootRef.current.contentWindow.scrollTop);\r\n        // }\r\n    }\r\n\r\n    handleCommandBoxOnKeyDown(ev) {\r\n        const clearBox = () => {\r\n            this.commandBoxRef.current.value = '';\r\n            const instance = M.Autocomplete.getInstance(\r\n                document.querySelectorAll('.command-box-input.autocomplete')[0]);\r\n            instance.close();\r\n        };\r\n\r\n        if (ev.keyCode === 13) {\r\n            if (this.commandBoxRef.current.value.trim() === '') {\r\n                clearBox();\r\n            } else {\r\n                const command = `(${this.commandBoxRef.current.value})`;\r\n                commandRunner(command)\r\n                .then(r => {\r\n                    clearBox();\r\n                    if (typeof r === 'string' && r.trim() === '') {\r\n                        return;\r\n                    }\r\n                    if (r === null || r === void 0) {\r\n                        return;\r\n                    }\r\n                    if (Array.isArray(r) && r.length === 0) {\r\n                        return;\r\n                    }\r\n                    M.toast({\r\n                        html: escapeHtml(String(r)).replace(/\\r?\\n/g, '<br>'),\r\n                        classes: 'teal darken-4',\r\n                    });\r\n                })\r\n                .catch(e => {\r\n                    clearBox();\r\n                    M.toast({\r\n                        html: escapeHtml(String(e)),\r\n                        classes: 'red darken-4',\r\n                    });\r\n                });\r\n            }\r\n        } else if (ev.keyCode === 27) {\r\n            clearBox();\r\n            document.activeElement.blur();\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCommandBoxOnBlur(ev) {\r\n        M.Toast.dismissAll();\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        editor.focus();\r\n    }\r\n\r\n    handleSplitterOnPointerDown(ev) {\r\n        this.setState({splitterMoving: true});\r\n        const moveHandler = (ev2) => {\r\n            const maxWidth = Math.max(Math.min(ev2.clientX - 5, window.innerWidth - 440), 400);\r\n            const width = `${Math.round(maxWidth / window.innerWidth * 100)}%`;\r\n            this.editorRef.current.outerWrapRef.current.style.width = width;\r\n            this.editorPlaceholderRef.current.style.width = width;\r\n        };\r\n        const upHandler = (ev2) => {\r\n            window.onpointermove = null;\r\n            window.onpointerup = null;\r\n            this.splitterRef.current.releasePointerCapture(ev2.pointerId);\r\n            this.setState({splitterMoving: false});\r\n            setTimeout(() => {\r\n                this.rootRef.current.contentWindow.scrollTo(\r\n                    this.rootRef.current.contentWindow.scrollX,\r\n                    this.savedPreviewScrollY,\r\n                );\r\n\r\n                // adjust wrapping and horizontal scroll bar\r\n                const editor = AppState.AceEditor[this.state.currentAceId];\r\n                editor.resize(true);\r\n            }, 30);\r\n        };\r\n        window.onpointermove = moveHandler;\r\n        window.onpointerup = upHandler;\r\n        this.splitterRef.current.setPointerCapture(ev.pointerId);\r\n    }\r\n\r\n    render() {\r\n        const isEmulation = window._MDNE_BACKEND_TYPE === 'BROWSER_EMULATION';\r\n        const iframeSrc = `${resourceBaseDirectory}empty.html`;\r\n\r\n        return (lsx`\r\n        (Template\r\n            (div (@ (className \"AppMainMenuWrap\"))\r\n                (a (@ (className \"AppMainMenu dropdown-trigger btn-floating\")\r\n                      (data-target \"dropdown1\") )\r\n                    (i (@ (className \"AppMainMenuIcon material-icons large\")) \"dehaze\") )\r\n                (ul (@ (id \"dropdown1\")\r\n                       (className \"dropdown-content\") )\r\n                    (MenuItem (@ (icon \"add_box\")\r\n                                 (caption \"New window\")\r\n                                 (onClick ${() => { openNewWindow() }}) ))\r\n                    (MenuItem (@ (icon \"folder_open\")\r\n                                 (caption \"Open...\")\r\n                                 (onClick ${(ev) => this.handleFileOpenClick(ev)}) ))\r\n                    (MenuItem (@ (icon \"save\")\r\n                                 (caption \"Save (Ctrl+S)\")\r\n                                 (onClick ${(ev) => this.handleSaveClick(ev)}) ))\r\n                    (MenuItem (@ (icon \"save\")\r\n                                 (caption \"Save as...\")\r\n                                 (onClick ${(ev) => this.handleSaveAsClick(ev)}) ))\r\n                    (MenuItem (@ (icon \"publish\")\r\n                                 (caption \"Export...\")\r\n                                 (onClick ${(ev) => this.handleExportClick(ev)}) ))\r\n                    (MenuDivider)\r\n                    (MenuItem (@ (icon \"find_in_page\")\r\n                                 (caption \"Find... (Ctrl+F)\")\r\n                                 (onClick ${() => {\r\n                                     const editor = AppState.AceEditor['editor'];\r\n                                     editor.execCommand('find');\r\n                                 }}) ))\r\n                    (MenuDivider)\r\n                    (MenuItem (@ (icon \"settings\")\r\n                                 (caption \"Settings...\")\r\n                                 (onClick ${(ev) => this.handleSettingsClick(ev)}) ))\r\n                    (MenuItem (@ (icon \"help_outline\")\r\n                                 (caption \"Help\")\r\n                                 (onClick ${() => openURL('https://github.com/shellyln/mdne')}) )) )\r\n                (Switch (@ (caption \"Sync preview\")\r\n                           (offText \"OFF\")\r\n                           (onText  \"ON\")\r\n                           (elClass \"hide-on-smallest\")\r\n                           (checked ${this.state.syncPreview})\r\n                           (onClick ${(ev) => this.handleSyncPreviewClick(ev)}) ))\r\n                ($if ${!window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER}\r\n                    (Switch (@ (caption \"Preview format\")\r\n                            (offText \"HTML\")\r\n                            (onText  \"PDF\")\r\n                            (elClass \"hide-on-smallest\")\r\n                            (checked ${this.state.isPdf})\r\n                            (onClick ${(ev) => this.handleIsPdfClick(ev)}) )))\r\n                (Switch (@ (caption \"Scripting\")\r\n                           (offText \"OFF\")\r\n                           (onText  \"ON\")\r\n                           (elClass \"hide-on-smallest\")\r\n                           (checked ${this.state.useScripting})\r\n                           (onClick ${(ev) => this.handleUseScriptingClick(ev)}) ))\r\n                (span (@ (style (flexGrow \"2\"))) \" \")\r\n                (div (@ (className \"row command-box-input-outer\") )\r\n                    (div (@ (className \"input-field col s9 command-box-input-inner\") )\r\n                        (input (@ (ref ${this.commandBoxRef})\r\n                                  (className \"CommandBoxInput command-box-input autocomplete\")\r\n                                  (type \"text\")\r\n                                  (placeholder ($concat\r\n                                      \"Command palette    (\" ${\r\n                                      isEmulation && this.isChrome ? 'Alt+Ctrl+Shift+O' :'Ctrl+Shift+O'\r\n                                      } \")\" ))\r\n                                  (spellcheck \"false\")\r\n                                  (onBlur ${(ev) => this.handleCommandBoxOnBlur(ev)})\r\n                                  (onKeyDown ${(ev) => this.handleCommandBoxOnKeyDown(ev)}) ))))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px\") )\r\n                           (className \"btn tooltipped\")\r\n                           (data-tooltip \"Update preview\")\r\n                           (onClick ${(ev) => this.handleShowClick(ev)}) )\r\n                    (i (@ (className \"material-icons\")) \"visibility\") )\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px\") )\r\n                           (className \"btn tooltipped\")\r\n                           (data-tooltip \"Toggle preview\")\r\n                           (onClick ${(ev) => this.handleStretchedClick(ev)}) )\r\n                    (i (@ (className \"material-icons\")) \"chrome_reader_mode\") ))\r\n            (div (@ (className \"AppMainContentWrap\"))\r\n                (AceEditor (@ (ref ${this.editorRef})\r\n                              (id \"editor\")\r\n                              (stretched ${this.state.stretched ? true: false})\r\n                              (collapsed ${this.state.splitterMoving ? true: false})\r\n                              (fontSize ${this.aceFontSize})\r\n                              (onSaveAs ${(o) => this.handleSaveAsClick(o)})\r\n                              (onChange ${(o) => this.handleAceEditorOnChange(o)})\r\n                              (onChangeScrollTop ${(y, totalHeight) => this.handleAceEditorOnChangeScrollTop(y, totalHeight)})\r\n                              (onChangeScrollLeft ${(x) => this.handleAceEditorOnChangeScrollLeft(x)}) ))\r\n                (div (@ (ref ${this.editorPlaceholderRef})\r\n                        (className ($concat \"AceEditorPlaceholder\"\r\n                                   ${this.state.splitterMoving ? \"\" : \" collapsed\"}) ) ))\r\n                (div (@ (ref ${this.splitterRef})\r\n                        (className ($concat \"Splitter\"\r\n                                   ${this.state.stretched ? \" collapsed\" : \"\"}))\r\n                        (onPointerDown ${(ev) => this.handleSplitterOnPointerDown(ev)}) ))\r\n                (div (@ (className ($concat \"OutputIframePlaceholder\"\r\n                                   ${this.state.splitterMoving ? \"\" : \" collapsed\"}) ) ))\r\n                (iframe (@ (ref ${this.rootRef})\r\n                           (src ${iframeSrc})\r\n                           (style (background-color ${this.state.darkThemePreview && AppState.inputFormat === 'md' ? '#1b1f23' : 'white'}))\r\n                           ; (sandbox \"\")\r\n                           (className ($concat \"OutputIframe\"\r\n                                      ${this.state.stretched || this.state.splitterMoving ? \" collapsed\" : \"\"}) ) ))\r\n                (div (@ (id \"appIndicatorBar\")\r\n                        (className \"AppIndicatorBar\")) \"\") )\r\n            (FileDropDialog (@ (ref ${this.fileDropDialogRef})))\r\n            (FileOpenDialog (@ (ref ${this.fileOpenDialogRef})))\r\n            (FileSaveDialog (@ (ref ${this.fileSaveDialogRef})))\r\n            (SettingsDialog (@ (ref ${this.settingsDialogRef}))) )`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport AceEditor       from '../components/aceeditor.js';\r\nimport FileDropDialog  from '../components/filedropdialog.js';\r\nimport FileOpenDialog  from '../components/fileopendialog.js';\r\nimport FileSaveDialog  from '../components/filesavedialog.js';\r\nimport SettingsDialog  from '../components/settingsdialog.js';\r\nimport { MenuItem,\r\n         MenuDivider,\r\n         Switch }      from '../components/ui.js';\r\nimport App             from '../components/app.js';\r\n\r\n\r\n\r\nconst lsx_ = liyad.LSX({\r\n    jsx: React.createElement,\r\n    jsxFlagment: React.Fragment,\r\n    components: {\r\n        AceEditor,\r\n        FileDropDialog,\r\n        FileOpenDialog,\r\n        FileSaveDialog,\r\n        SettingsDialog,\r\n        MenuItem,\r\n        MenuDivider,\r\n        Switch,\r\n        App,\r\n    },\r\n});\r\n\r\nexport default lsx_;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { initBackend } from './libs/remote.js';\nimport lsx_            from './libs/lsx.js';\n\n\n\nwindow.lsx = lsx_;\n\n\n(async () => {\n    await initBackend();\n    ReactDOM.render(lsx`(App)`, document.getElementById('app'));\n})();\n"],"sourceRoot":""}